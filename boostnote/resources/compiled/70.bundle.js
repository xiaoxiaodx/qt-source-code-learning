(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{"./node_modules/codemirror/mode/ntriples/ntriples.js":function(_,n,e){!function(_){"use strict";_.defineMode("ntriples",(function(){var _={PRE_SUBJECT:0,WRITING_SUB_URI:1,WRITING_BNODE_URI:2,PRE_PRED:3,WRITING_PRED_URI:4,PRE_OBJ:5,WRITING_OBJ_URI:6,WRITING_OBJ_BNODE:7,WRITING_OBJ_LITERAL:8,WRITING_LIT_LANG:9,WRITING_LIT_TYPE:10,POST_OBJ:11,ERROR:12};function n(n,e){var I,R=n.location;I=R==_.PRE_SUBJECT&&"<"==e?_.WRITING_SUB_URI:R==_.PRE_SUBJECT&&"_"==e?_.WRITING_BNODE_URI:R==_.PRE_PRED&&"<"==e?_.WRITING_PRED_URI:R==_.PRE_OBJ&&"<"==e?_.WRITING_OBJ_URI:R==_.PRE_OBJ&&"_"==e?_.WRITING_OBJ_BNODE:R==_.PRE_OBJ&&'"'==e?_.WRITING_OBJ_LITERAL:R==_.WRITING_SUB_URI&&">"==e?_.PRE_PRED:R==_.WRITING_BNODE_URI&&" "==e?_.PRE_PRED:R==_.WRITING_PRED_URI&&">"==e?_.PRE_OBJ:R==_.WRITING_OBJ_URI&&">"==e?_.POST_OBJ:R==_.WRITING_OBJ_BNODE&&" "==e?_.POST_OBJ:R==_.WRITING_OBJ_LITERAL&&'"'==e?_.POST_OBJ:R==_.WRITING_LIT_LANG&&" "==e?_.POST_OBJ:R==_.WRITING_LIT_TYPE&&">"==e?_.POST_OBJ:R==_.WRITING_OBJ_LITERAL&&"@"==e?_.WRITING_LIT_LANG:R==_.WRITING_OBJ_LITERAL&&"^"==e?_.WRITING_LIT_TYPE:" "!=e||R!=_.PRE_SUBJECT&&R!=_.PRE_PRED&&R!=_.PRE_OBJ&&R!=_.POST_OBJ?R==_.POST_OBJ&&"."==e?_.PRE_SUBJECT:_.ERROR:R,n.location=I}return{startState:function(){return{location:_.PRE_SUBJECT,uris:[],anchors:[],bnodes:[],langs:[],types:[]}},token:function(_,e){var I=_.next();if("<"==I){n(e,I);var R="";return _.eatWhile((function(_){return"#"!=_&&">"!=_&&(R+=_,!0)})),e.uris.push(R),_.match("#",!1)?"variable":(_.next(),n(e,">"),"variable")}if("#"==I){var r="";return _.eatWhile((function(_){return">"!=_&&" "!=_&&(r+=_,!0)})),e.anchors.push(r),"variable-2"}if(">"==I)return n(e,">"),"variable";if("_"==I){n(e,I);var t="";return _.eatWhile((function(_){return" "!=_&&(t+=_,!0)})),e.bnodes.push(t),_.next(),n(e," "),"builtin"}if('"'==I)return n(e,I),_.eatWhile((function(_){return'"'!=_})),_.next(),"@"!=_.peek()&&"^"!=_.peek()&&n(e,'"'),"string";if("@"==I){n(e,"@");var i="";return _.eatWhile((function(_){return" "!=_&&(i+=_,!0)})),e.langs.push(i),_.next(),n(e," "),"string-2"}if("^"==I){_.next(),n(e,"^");var T="";return _.eatWhile((function(_){return">"!=_&&(T+=_,!0)})),e.types.push(T),_.next(),n(e,">"),"variable"}" "==I&&n(e,I),"."==I&&n(e,I)}}})),_.defineMIME("application/n-triples","ntriples"),_.defineMIME("application/n-quads","ntriples"),_.defineMIME("text/n-triples","ntriples")}(e("./node_modules/codemirror/lib/codemirror.js"))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,