(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{"./node_modules/codemirror/mode/octave/octave.js":function(e,n,t){!function(e){"use strict";e.defineMode("octave",(function(){function e(e){return new RegExp("^(("+e.join(")|(")+"))\\b")}var n=new RegExp("^[\\+\\-\\*/&|\\^~<>!@'\\\\]"),t=new RegExp("^[\\(\\[\\{\\},:=;\\.]"),r=new RegExp("^((==)|(~=)|(<=)|(>=)|(<<)|(>>)|(\\.[\\+\\-\\*/\\^\\\\]))"),i=new RegExp("^((!=)|(\\+=)|(\\-=)|(\\*=)|(/=)|(&=)|(\\|=)|(\\^=))"),o=new RegExp("^((>>=)|(<<=))"),a=new RegExp("^[\\]\\)]"),c=new RegExp("^[_A-Za-z¡-￿][_A-Za-z0-9¡-￿]*"),m=e(["error","eval","function","abs","acos","atan","asin","cos","cosh","exp","log","prod","sum","log10","max","min","sign","sin","sinh","sqrt","tan","reshape","break","zeros","default","margin","round","ones","rand","syn","ceil","floor","size","clear","zeros","eye","mean","std","cov","det","eig","inv","norm","rank","trace","expm","logm","sqrtm","linspace","plot","title","xlabel","ylabel","legend","text","grid","meshgrid","mesh","num2str","fft","ifft","arrayfun","cellfun","input","fliplr","flipud","ismember"]),s=e(["return","case","switch","else","elseif","end","endif","endfunction","if","otherwise","do","for","while","try","catch","classdef","properties","events","methods","global","persistent","endfor","endwhile","printf","sprintf","disp","until","continue","pkg"]);function u(e,n){return e.sol()||"'"!==e.peek()?(n.tokenize=l,l(e,n)):(e.next(),n.tokenize=l,"operator")}function d(e,n){return e.match(/^.*%}/)?(n.tokenize=l,"comment"):(e.skipToEnd(),"comment")}function l(f,p){if(f.eatSpace())return null;if(f.match("%{"))return p.tokenize=d,f.skipToEnd(),"comment";if(f.match(/^[%#]/))return f.skipToEnd(),"comment";if(f.match(/^[0-9\.+-]/,!1)){if(f.match(/^[+-]?0x[0-9a-fA-F]+[ij]?/))return f.tokenize=l,"number";if(f.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?[ij]?/))return"number";if(f.match(/^[+-]?\d+([EeDd][+-]?\d+)?[ij]?/))return"number"}if(f.match(e(["nan","NaN","inf","Inf"])))return"number";var h=f.match(/^"(?:[^"]|"")*("|$)/)||f.match(/^'(?:[^']|'')*('|$)/);return h?h[1]?"string":"string error":f.match(s)?"keyword":f.match(m)?"builtin":f.match(c)?"variable":f.match(n)||f.match(r)?"operator":f.match(t)||f.match(i)||f.match(o)?null:f.match(a)?(p.tokenize=u,null):(f.next(),"error")}return{startState:function(){return{tokenize:l}},token:function(e,n){var t=n.tokenize(e,n);return"number"!==t&&"variable"!==t||(n.tokenize=u),t},lineComment:"%",fold:"indent"}})),e.defineMIME("text/x-octave","octave")}(t("./node_modules/codemirror/lib/codemirror.js"))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,