(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{"./node_modules/codemirror/mode/mbox/mbox.js":function(e,n,r){!function(e){"use strict";var n=["From","Sender","Reply-To","To","Cc","Bcc","Message-ID","In-Reply-To","References","Resent-From","Resent-Sender","Resent-To","Resent-Cc","Resent-Bcc","Resent-Message-ID","Return-Path","Received"],r=["Date","Subject","Comments","Keywords","Resent-Date"];e.registerHelper("hintWords","mbox",n.concat(r));var t=/^[ \t]/,i=/^From /,a=new RegExp("^("+n.join("|")+"): "),o=new RegExp("^("+r.join("|")+"): "),d=/^[^:]+:/,m=/^[^ ]+@[^ ]+/,s=/^.*?(?=[^ ]+?@[^ ]+)/,c=/^<.*?>/,u=/^.*?(?=<.*>)/;function l(e,n){if(e.sol()){if(n.inSeparator=!1,n.inHeader&&e.match(t))return null;if(n.inHeader=!1,n.header=null,e.match(i))return n.inHeaders=!0,n.inSeparator=!0,"atom";var r,l=!1;return(r=e.match(o))||(l=!0)&&(r=e.match(a))?(n.inHeaders=!0,n.inHeader=!0,n.emailPermitted=l,n.header=r[1],"atom"):n.inHeaders&&(r=e.match(d))?(n.inHeader=!0,n.emailPermitted=!0,n.header=r[1],"atom"):(n.inHeaders=!1,e.skipToEnd(),null)}if(n.inSeparator)return e.match(m)?"link":e.match(s)?"atom":(e.skipToEnd(),"atom");if(n.inHeader){var p=function(e){return"Subject"===e?"header":"string"}(n.header);if(n.emailPermitted){if(e.match(c))return p+" link";if(e.match(u))return p}return e.skipToEnd(),p}return e.skipToEnd(),null}e.defineMode("mbox",(function(){return{startState:function(){return{inSeparator:!1,inHeader:!1,emailPermitted:!1,header:null,inHeaders:!1}},token:l,blankLine:function(e){e.inHeaders=e.inSeparator=e.inHeader=!1}}})),e.defineMIME("application/mbox","mbox")}(r("./node_modules/codemirror/lib/codemirror.js"))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29kZW1pcnJvci9tb2RlL21ib3gvbWJveC5qcyJdLCJuYW1lcyI6WyJDb2RlTWlycm9yIiwicmZjMjgyMiIsInJmYzI4MjJOb0VtYWlsIiwicmVnaXN0ZXJIZWxwZXIiLCJjb25jYXQiLCJ3aGl0ZXNwYWNlIiwic2VwYXJhdG9yIiwicmZjMjgyMkhlYWRlciIsIlJlZ0V4cCIsImpvaW4iLCJyZmMyODIySGVhZGVyTm9FbWFpbCIsImhlYWRlciIsImVtYWlsIiwidW50aWxFbWFpbCIsImJyYWNrZXRlZEVtYWlsIiwidW50aWxCcmFja2V0ZWRFbWFpbCIsInJlYWRUb2tlbiIsInN0cmVhbSIsInN0YXRlIiwic29sIiwiaW5TZXBhcmF0b3IiLCJpbkhlYWRlciIsIm1hdGNoIiwiaW5IZWFkZXJzIiwiZW1haWxQZXJtaXR0ZWQiLCJza2lwVG9FbmQiLCJzdHlsZSIsInN0eWxlRm9ySGVhZGVyIiwiZGVmaW5lTW9kZSIsInN0YXJ0U3RhdGUiLCJ0b2tlbiIsImJsYW5rTGluZSIsImRlZmluZU1JTUUiLCJtb2QiXSwibWFwcGluZ3MiOiJ5SEFVRyxTQUFTQSxHQUNaLGFBRUEsSUFBSUMsRUFBVSxDQUNaLE9BQVEsU0FBVSxXQUFZLEtBQU0sS0FBTSxNQUFPLGFBQ2pELGNBQWUsYUFBYyxjQUFlLGdCQUFpQixZQUM3RCxZQUFhLGFBQWMsb0JBQXFCLGNBQWUsWUFFN0RDLEVBQWlCLENBQ25CLE9BQVEsVUFBVyxXQUFZLFdBQVksZUFHN0NGLEVBQVdHLGVBQWUsWUFBYSxPQUFRRixFQUFRRyxPQUFPRixJQUU5RCxJQUFJRyxFQUFhLFNBQ2JDLEVBQVksU0FDWkMsRUFBZ0IsSUFBSUMsT0FBTyxLQUFPUCxFQUFRUSxLQUFLLEtBQU8sT0FDdERDLEVBQXVCLElBQUlGLE9BQU8sS0FBT04sRUFBZU8sS0FBSyxLQUFPLE9BQ3BFRSxFQUFTLFVBQ1RDLEVBQVEsZUFDUkMsRUFBYSx1QkFDYkMsRUFBaUIsU0FDakJDLEVBQXNCLGVBTzFCLFNBQVNDLEVBQVVDLEVBQVFDLEdBQ3pCLEdBQUlELEVBQU9FLE1BQU8sQ0FHaEIsR0FEQUQsRUFBTUUsYUFBYyxFQUNoQkYsRUFBTUcsVUFBWUosRUFBT0ssTUFBTWpCLEdBRWpDLE9BQU8sS0FNVCxHQUpFYSxFQUFNRyxVQUFXLEVBQ2pCSCxFQUFNUCxPQUFTLEtBR2JNLEVBQU9LLE1BQU1oQixHQUdmLE9BRkFZLEVBQU1LLFdBQVksRUFDbEJMLEVBQU1FLGFBQWMsRUFDYixPQUdULElBQUlFLEVBQ0FFLEdBQWlCLEVBQ3JCLE9BQUtGLEVBQVFMLEVBQU9LLE1BQU1aLE1BQ3JCYyxHQUFpQixLQUFVRixFQUFRTCxFQUFPSyxNQUFNZixLQUNuRFcsRUFBTUssV0FBWSxFQUNsQkwsRUFBTUcsVUFBVyxFQUNqQkgsRUFBTU0sZUFBaUJBLEVBQ3ZCTixFQUFNUCxPQUFTVyxFQUFNLEdBQ2QsUUFLTEosRUFBTUssWUFBY0QsRUFBUUwsRUFBT0ssTUFBTVgsS0FDM0NPLEVBQU1HLFVBQVcsRUFDakJILEVBQU1NLGdCQUFpQixFQUN2Qk4sRUFBTVAsT0FBU1csRUFBTSxHQUNkLFNBR1RKLEVBQU1LLFdBQVksRUFDbEJOLEVBQU9RLFlBQ0EsTUFHVCxHQUFJUCxFQUFNRSxZQUNSLE9BQUlILEVBQU9LLE1BQU1WLEdBQWUsT0FDNUJLLEVBQU9LLE1BQU1ULEdBQW9CLFFBQ3JDSSxFQUFPUSxZQUNBLFFBR1QsR0FBSVAsRUFBTUcsU0FBVSxDQUNsQixJQUFJSyxFQXhEUixTQUF3QmYsR0FDdEIsTUFBZSxZQUFYQSxFQUE2QixTQUMxQixTQXNET2dCLENBQWVULEVBQU1QLFFBRWpDLEdBQUlPLEVBQU1NLGVBQWdCLENBQ3hCLEdBQUlQLEVBQU9LLE1BQU1SLEdBQWlCLE9BQU9ZLEVBQVEsUUFDakQsR0FBSVQsRUFBT0ssTUFBTVAsR0FBc0IsT0FBT1csRUFHaEQsT0FEQVQsRUFBT1EsWUFDQUMsRUFJVCxPQURBVCxFQUFPUSxZQUNBLEtBR1R6QixFQUFXNEIsV0FBVyxRQUFRLFdBQzVCLE1BQU8sQ0FDTEMsV0FBWSxXQUNWLE1BQU8sQ0FFTFQsYUFBYSxFQUViQyxVQUFVLEVBRVZHLGdCQUFnQixFQUVoQmIsT0FBUSxLQUVSWSxXQUFXLElBR2ZPLE1BQU9kLEVBQ1BlLFVBQVcsU0FBU2IsR0FDbEJBLEVBQU1LLFVBQVlMLEVBQU1FLFlBQWNGLEVBQU1HLFVBQVcsT0FLN0RyQixFQUFXZ0MsV0FBVyxtQkFBb0IsUUExSHRDQyxDQUFJLEVBQVEiLCJmaWxlIjoiNjMuYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29kZU1pcnJvciwgY29weXJpZ2h0IChjKSBieSBNYXJpam4gSGF2ZXJiZWtlIGFuZCBvdGhlcnNcbi8vIERpc3RyaWJ1dGVkIHVuZGVyIGFuIE1JVCBsaWNlbnNlOiBodHRwczovL2NvZGVtaXJyb3IubmV0L0xJQ0VOU0VcblxuKGZ1bmN0aW9uKG1vZCkge1xuICBpZiAodHlwZW9mIGV4cG9ydHMgPT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgbW9kdWxlID09IFwib2JqZWN0XCIpIC8vIENvbW1vbkpTXG4gICAgbW9kKHJlcXVpcmUoXCIuLi8uLi9saWIvY29kZW1pcnJvclwiKSk7XG4gIGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQpIC8vIEFNRFxuICAgIGRlZmluZShbXCIuLi8uLi9saWIvY29kZW1pcnJvclwiXSwgbW9kKTtcbiAgZWxzZSAvLyBQbGFpbiBicm93c2VyIGVudlxuICAgIG1vZChDb2RlTWlycm9yKTtcbn0pKGZ1bmN0aW9uKENvZGVNaXJyb3IpIHtcblwidXNlIHN0cmljdFwiO1xuXG52YXIgcmZjMjgyMiA9IFtcbiAgXCJGcm9tXCIsIFwiU2VuZGVyXCIsIFwiUmVwbHktVG9cIiwgXCJUb1wiLCBcIkNjXCIsIFwiQmNjXCIsIFwiTWVzc2FnZS1JRFwiLFxuICBcIkluLVJlcGx5LVRvXCIsIFwiUmVmZXJlbmNlc1wiLCBcIlJlc2VudC1Gcm9tXCIsIFwiUmVzZW50LVNlbmRlclwiLCBcIlJlc2VudC1Ub1wiLFxuICBcIlJlc2VudC1DY1wiLCBcIlJlc2VudC1CY2NcIiwgXCJSZXNlbnQtTWVzc2FnZS1JRFwiLCBcIlJldHVybi1QYXRoXCIsIFwiUmVjZWl2ZWRcIlxuXTtcbnZhciByZmMyODIyTm9FbWFpbCA9IFtcbiAgXCJEYXRlXCIsIFwiU3ViamVjdFwiLCBcIkNvbW1lbnRzXCIsIFwiS2V5d29yZHNcIiwgXCJSZXNlbnQtRGF0ZVwiXG5dO1xuXG5Db2RlTWlycm9yLnJlZ2lzdGVySGVscGVyKFwiaGludFdvcmRzXCIsIFwibWJveFwiLCByZmMyODIyLmNvbmNhdChyZmMyODIyTm9FbWFpbCkpO1xuXG52YXIgd2hpdGVzcGFjZSA9IC9eWyBcXHRdLztcbnZhciBzZXBhcmF0b3IgPSAvXkZyb20gLzsgLy8gU2VlIFJGQyA0MTU1XG52YXIgcmZjMjgyMkhlYWRlciA9IG5ldyBSZWdFeHAoXCJeKFwiICsgcmZjMjgyMi5qb2luKFwifFwiKSArIFwiKTogXCIpO1xudmFyIHJmYzI4MjJIZWFkZXJOb0VtYWlsID0gbmV3IFJlZ0V4cChcIl4oXCIgKyByZmMyODIyTm9FbWFpbC5qb2luKFwifFwiKSArIFwiKTogXCIpO1xudmFyIGhlYWRlciA9IC9eW146XSs6LzsgLy8gT3B0aW9uYWwgZmllbGRzIGRlZmluZWQgaW4gUkZDIDI4MjJcbnZhciBlbWFpbCA9IC9eW14gXStAW14gXSsvO1xudmFyIHVudGlsRW1haWwgPSAvXi4qPyg/PVteIF0rP0BbXiBdKykvO1xudmFyIGJyYWNrZXRlZEVtYWlsID0gL148Lio/Pi87XG52YXIgdW50aWxCcmFja2V0ZWRFbWFpbCA9IC9eLio/KD89PC4qPikvO1xuXG5mdW5jdGlvbiBzdHlsZUZvckhlYWRlcihoZWFkZXIpIHtcbiAgaWYgKGhlYWRlciA9PT0gXCJTdWJqZWN0XCIpIHJldHVybiBcImhlYWRlclwiO1xuICByZXR1cm4gXCJzdHJpbmdcIjtcbn1cblxuZnVuY3Rpb24gcmVhZFRva2VuKHN0cmVhbSwgc3RhdGUpIHtcbiAgaWYgKHN0cmVhbS5zb2woKSkge1xuICAgIC8vIEZyb20gbGFzdCBsaW5lXG4gICAgc3RhdGUuaW5TZXBhcmF0b3IgPSBmYWxzZTtcbiAgICBpZiAoc3RhdGUuaW5IZWFkZXIgJiYgc3RyZWFtLm1hdGNoKHdoaXRlc3BhY2UpKSB7XG4gICAgICAvLyBIZWFkZXIgZm9sZGluZ1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0YXRlLmluSGVhZGVyID0gZmFsc2U7XG4gICAgICBzdGF0ZS5oZWFkZXIgPSBudWxsO1xuICAgIH1cblxuICAgIGlmIChzdHJlYW0ubWF0Y2goc2VwYXJhdG9yKSkge1xuICAgICAgc3RhdGUuaW5IZWFkZXJzID0gdHJ1ZTtcbiAgICAgIHN0YXRlLmluU2VwYXJhdG9yID0gdHJ1ZTtcbiAgICAgIHJldHVybiBcImF0b21cIjtcbiAgICB9XG5cbiAgICB2YXIgbWF0Y2g7XG4gICAgdmFyIGVtYWlsUGVybWl0dGVkID0gZmFsc2U7XG4gICAgaWYgKChtYXRjaCA9IHN0cmVhbS5tYXRjaChyZmMyODIySGVhZGVyTm9FbWFpbCkpIHx8XG4gICAgICAgIChlbWFpbFBlcm1pdHRlZCA9IHRydWUpICYmIChtYXRjaCA9IHN0cmVhbS5tYXRjaChyZmMyODIySGVhZGVyKSkpIHtcbiAgICAgIHN0YXRlLmluSGVhZGVycyA9IHRydWU7XG4gICAgICBzdGF0ZS5pbkhlYWRlciA9IHRydWU7XG4gICAgICBzdGF0ZS5lbWFpbFBlcm1pdHRlZCA9IGVtYWlsUGVybWl0dGVkO1xuICAgICAgc3RhdGUuaGVhZGVyID0gbWF0Y2hbMV07XG4gICAgICByZXR1cm4gXCJhdG9tXCI7XG4gICAgfVxuXG4gICAgLy8gVXNlIHZpbSdzIGhldXJpc3RpY3M6IHJlY29nbml6ZSBjdXN0b20gaGVhZGVycyBvbmx5IGlmIHRoZSBsaW5lIGlzIGluIGFcbiAgICAvLyBibG9jayBvZiBsZWdpdGltYXRlIGhlYWRlcnMuXG4gICAgaWYgKHN0YXRlLmluSGVhZGVycyAmJiAobWF0Y2ggPSBzdHJlYW0ubWF0Y2goaGVhZGVyKSkpIHtcbiAgICAgIHN0YXRlLmluSGVhZGVyID0gdHJ1ZTtcbiAgICAgIHN0YXRlLmVtYWlsUGVybWl0dGVkID0gdHJ1ZTtcbiAgICAgIHN0YXRlLmhlYWRlciA9IG1hdGNoWzFdO1xuICAgICAgcmV0dXJuIFwiYXRvbVwiO1xuICAgIH1cblxuICAgIHN0YXRlLmluSGVhZGVycyA9IGZhbHNlO1xuICAgIHN0cmVhbS5za2lwVG9FbmQoKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGlmIChzdGF0ZS5pblNlcGFyYXRvcikge1xuICAgIGlmIChzdHJlYW0ubWF0Y2goZW1haWwpKSByZXR1cm4gXCJsaW5rXCI7XG4gICAgaWYgKHN0cmVhbS5tYXRjaCh1bnRpbEVtYWlsKSkgcmV0dXJuIFwiYXRvbVwiO1xuICAgIHN0cmVhbS5za2lwVG9FbmQoKTtcbiAgICByZXR1cm4gXCJhdG9tXCI7XG4gIH1cblxuICBpZiAoc3RhdGUuaW5IZWFkZXIpIHtcbiAgICB2YXIgc3R5bGUgPSBzdHlsZUZvckhlYWRlcihzdGF0ZS5oZWFkZXIpO1xuXG4gICAgaWYgKHN0YXRlLmVtYWlsUGVybWl0dGVkKSB7XG4gICAgICBpZiAoc3RyZWFtLm1hdGNoKGJyYWNrZXRlZEVtYWlsKSkgcmV0dXJuIHN0eWxlICsgXCIgbGlua1wiO1xuICAgICAgaWYgKHN0cmVhbS5tYXRjaCh1bnRpbEJyYWNrZXRlZEVtYWlsKSkgcmV0dXJuIHN0eWxlO1xuICAgIH1cbiAgICBzdHJlYW0uc2tpcFRvRW5kKCk7XG4gICAgcmV0dXJuIHN0eWxlO1xuICB9XG5cbiAgc3RyZWFtLnNraXBUb0VuZCgpO1xuICByZXR1cm4gbnVsbDtcbn07XG5cbkNvZGVNaXJyb3IuZGVmaW5lTW9kZShcIm1ib3hcIiwgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB7XG4gICAgc3RhcnRTdGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAvLyBJcyBpbiBhIG1ib3ggc2VwYXJhdG9yXG4gICAgICAgIGluU2VwYXJhdG9yOiBmYWxzZSxcbiAgICAgICAgLy8gSXMgaW4gYSBtYWlsIGhlYWRlclxuICAgICAgICBpbkhlYWRlcjogZmFsc2UsXG4gICAgICAgIC8vIElmIGJyYWNrZXRlZCBlbWFpbCBpcyBwZXJtaXR0ZWQuIE9ubHkgYXBwbGljYWJsZSB3aGVuIGluSGVhZGVyXG4gICAgICAgIGVtYWlsUGVybWl0dGVkOiBmYWxzZSxcbiAgICAgICAgLy8gTmFtZSBvZiBjdXJyZW50IGhlYWRlclxuICAgICAgICBoZWFkZXI6IG51bGwsXG4gICAgICAgIC8vIElzIGluIGEgcmVnaW9uIG9mIG1haWwgaGVhZGVyc1xuICAgICAgICBpbkhlYWRlcnM6IGZhbHNlXG4gICAgICB9O1xuICAgIH0sXG4gICAgdG9rZW46IHJlYWRUb2tlbixcbiAgICBibGFua0xpbmU6IGZ1bmN0aW9uKHN0YXRlKSB7XG4gICAgICBzdGF0ZS5pbkhlYWRlcnMgPSBzdGF0ZS5pblNlcGFyYXRvciA9IHN0YXRlLmluSGVhZGVyID0gZmFsc2U7XG4gICAgfVxuICB9O1xufSk7XG5cbkNvZGVNaXJyb3IuZGVmaW5lTUlNRShcImFwcGxpY2F0aW9uL21ib3hcIiwgXCJtYm94XCIpO1xufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9