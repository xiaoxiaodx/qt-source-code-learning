(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{"./node_modules/codemirror/mode/yacas/yacas.js":function(e,n,t){!function(e){"use strict";e.defineMode("yacas",(function(n,t){var r=function(e){for(var n={},t=e.split(" "),r=0;r<t.length;++r)n[t[r]]=!0;return n}("Assert BackQuote D Defun Deriv For ForEach FromFile FromString Function Integrate InverseTaylor Limit LocalSymbols Macro MacroRule MacroRulePattern NIntegrate Rule RulePattern Subst TD TExplicitSum TSum Taylor Taylor1 Taylor2 Taylor3 ToFile ToStdout ToString TraceRule Until While"),o="(?:[a-zA-Z\\$'][a-zA-Z0-9\\$']*)",a=new RegExp("(?:(?:\\.\\d+|\\d+\\.\\d*|\\d+)(?:[eE][+-]?\\d+)?)"),i=new RegExp(o),c=new RegExp(o+"?_"+o),s=new RegExp(o+"\\s*\\(");function u(e,n){var t;if('"'===(t=e.next()))return n.tokenize=l,n.tokenize(e,n);if("/"===t){if(e.eat("*"))return n.tokenize=p,n.tokenize(e,n);if(e.eat("/"))return e.skipToEnd(),"comment"}e.backUp(1);var o=e.match(/^(\w+)\s*\(/,!1);null!==o&&r.hasOwnProperty(o[1])&&n.scopes.push("bodied");var u=m(n);if("bodied"===u&&"["===t&&n.scopes.pop(),"["!==t&&"{"!==t&&"("!==t||n.scopes.push(t),("["===(u=m(n))&&"]"===t||"{"===u&&"}"===t||"("===u&&")"===t)&&n.scopes.pop(),";"===t)for(;"bodied"===u;)n.scopes.pop(),u=m(n);return e.match(/\d+ *#/,!0,!1)?"qualifier":e.match(a,!0,!1)?"number":e.match(c,!0,!1)?"variable-3":e.match(/(?:\[|\]|{|}|\(|\))/,!0,!1)?"bracket":e.match(s,!0,!1)?(e.backUp(1),"variable"):e.match(i,!0,!1)?"variable-2":e.match(/(?:\\|\+|\-|\*|\/|,|;|\.|:|@|~|=|>|<|&|\||_|`|'|\^|\?|!|%|#)/,!0,!1)?"operator":"error"}function l(e,n){for(var t,r=!1,o=!1;null!=(t=e.next());){if('"'===t&&!o){r=!0;break}o=!o&&"\\"===t}return r&&!o&&(n.tokenize=u),"string"}function p(e,n){for(var t,r;null!=(r=e.next());){if("*"===t&&"/"===r){n.tokenize=u;break}t=r}return"comment"}function m(e){var n=null;return e.scopes.length>0&&(n=e.scopes[e.scopes.length-1]),n}return{startState:function(){return{tokenize:u,scopes:[]}},token:function(e,n){return e.eatSpace()?null:n.tokenize(e,n)},indent:function(t,r){if(t.tokenize!==u&&null!==t.tokenize)return e.Pass;var o=0;return"]"!==r&&"];"!==r&&"}"!==r&&"};"!==r&&");"!==r||(o=-1),(t.scopes.length+o)*n.indentUnit},electricChars:"{}[]();",blockCommentStart:"/*",blockCommentEnd:"*/",lineComment:"//"}})),e.defineMIME("text/x-yacas",{name:"yacas"})}(t("./node_modules/codemirror/lib/codemirror.js"))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29kZW1pcnJvci9tb2RlL3lhY2FzL3lhY2FzLmpzIl0sIm5hbWVzIjpbIkNvZGVNaXJyb3IiLCJkZWZpbmVNb2RlIiwiX2NvbmZpZyIsIl9wYXJzZXJDb25maWciLCJib2RpZWRPcHMiLCJzdHIiLCJvYmoiLCJ3b3JkcyIsInNwbGl0IiwiaSIsImxlbmd0aCIsInBJZGVudGlmaWVyIiwicmVGbG9hdEZvcm0iLCJSZWdFeHAiLCJyZUlkZW50aWZpZXIiLCJyZVBhdHRlcm4iLCJyZUZ1bmN0aW9uTGlrZSIsInRva2VuQmFzZSIsInN0cmVhbSIsInN0YXRlIiwiY2giLCJuZXh0IiwidG9rZW5pemUiLCJ0b2tlblN0cmluZyIsImVhdCIsInRva2VuQ29tbWVudCIsInNraXBUb0VuZCIsImJhY2tVcCIsIm0iLCJtYXRjaCIsImhhc093blByb3BlcnR5Iiwic2NvcGVzIiwicHVzaCIsInNjb3BlIiwiY3VycmVudFNjb3BlIiwicG9wIiwiZW5kIiwiZXNjYXBlZCIsInByZXYiLCJzdGFydFN0YXRlIiwidG9rZW4iLCJlYXRTcGFjZSIsImluZGVudCIsInRleHRBZnRlciIsIlBhc3MiLCJkZWx0YSIsImluZGVudFVuaXQiLCJlbGVjdHJpY0NoYXJzIiwiYmxvY2tDb21tZW50U3RhcnQiLCJibG9ja0NvbW1lbnRFbmQiLCJsaW5lQ29tbWVudCIsImRlZmluZU1JTUUiLCJuYW1lIiwibW9kIl0sIm1hcHBpbmdzIjoiNEhBYUcsU0FBU0EsR0FDWixhQUVBQSxFQUFXQyxXQUFXLFNBQVMsU0FBU0MsRUFBU0MsR0FRL0MsSUFBSUMsRUFOSixTQUFlQyxHQUViLElBREEsSUFBSUMsRUFBTSxHQUFJQyxFQUFRRixFQUFJRyxNQUFNLEtBQ3ZCQyxFQUFJLEVBQUdBLEVBQUlGLEVBQU1HLFNBQVVELEVBQUdILEVBQUlDLEVBQU1FLEtBQU0sRUFDdkQsT0FBT0gsRUFHT0MsQ0FBTSw0UkFTbEJJLEVBQWMsbUNBR2RDLEVBQWlCLElB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Q1AsT0FBZEEsSUFDRkUsR0FBUyxJQUVIMUIsRUFBTVksT0FBT3JCLE9BQVNtQyxHQUFTM0MsRUFBUTRDLFlBRWpEQyxjQUFlLFVBQ2ZDLGtCQUFtQixLQUNuQkMsZ0JBQWlCLEtBQ2pCQyxZQUFhLFNBSWpCbEQsRUFBV21ELFdBQVcsZUFBZ0IsQ0FDcENDLEtBQU0sVUFoTUpDLENBQUksRUFBUSIsImZpbGUiOiIxMTUuYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29kZU1pcnJvciwgY29weXJpZ2h0IChjKSBieSBNYXJpam4gSGF2ZXJiZWtlIGFuZCBvdGhlcnNcbi8vIERpc3RyaWJ1dGVkIHVuZGVyIGFuIE1JVCBsaWNlbnNlOiBodHRwczovL2NvZGVtaXJyb3IubmV0L0xJQ0VOU0VcblxuLy8gWWFjYXMgbW9kZSBjb3B5cmlnaHQgKGMpIDIwMTUgYnkgR3J6ZWdvcnogTWF6dXJcbi8vIExvb3NlbHkgYmFzZWQgb24gbWF0aGVtYXRpY2EgbW9kZSBieSBDYWxpbiBCYXJiYXRcblxuKGZ1bmN0aW9uKG1vZCkge1xuICBpZiAodHlwZW9mIGV4cG9ydHMgPT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgbW9kdWxlID09IFwib2JqZWN0XCIpIC8vIENvbW1vbkpTXG4gICAgbW9kKHJlcXVpcmUoXCIuLi8uLi9saWIvY29kZW1pcnJvclwiKSk7XG4gIGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQpIC8vIEFNRFxuICAgIGRlZmluZShbXCIuLi8uLi9saWIvY29kZW1pcnJvclwiXSwgbW9kKTtcbiAgZWxzZSAvLyBQbGFpbiBicm93c2VyIGVudlxuICAgIG1vZChDb2RlTWlycm9yKTtcbn0pKGZ1bmN0aW9uKENvZGVNaXJyb3IpIHtcblwidXNlIHN0cmljdFwiO1xuXG5Db2RlTWlycm9yLmRlZmluZU1vZGUoJ3lhY2FzJywgZnVuY3Rpb24oX2NvbmZpZywgX3BhcnNlckNvbmZpZykge1xuXG4gIGZ1bmN0aW9uIHdvcmRzKHN0cikge1xuICAgIHZhciBvYmogPSB7fSwgd29yZHMgPSBzdHIuc3BsaXQoXCIgXCIpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgd29yZHMubGVuZ3RoOyArK2kpIG9ialt3b3Jkc1tpXV0gPSB0cnVlO1xuICAgIHJldHVybiBvYmo7XG4gIH1cblxuICB2YXIgYm9kaWVkT3BzID0gd29yZHMoXCJBc3NlcnQgQmFja1F1b3RlIEQgRGVmdW4gRGVyaXYgRm9yIEZvckVhY2ggRnJvbUZpbGUgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJGcm9tU3RyaW5nIEZ1bmN0aW9uIEludGVncmF0ZSBJbnZlcnNlVGF5bG9yIExpbWl0IFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiTG9jYWxTeW1ib2xzIE1hY3JvIE1hY3JvUnVsZSBNYWNyb1J1bGVQYXR0ZXJuIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiTkludGVncmF0ZSBSdWxlIFJ1bGVQYXR0ZXJuIFN1YnN0IFREIFRFeHBsaWNpdFN1bSBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICBcIlRTdW0gVGF5bG9yIFRheWxvcjEgVGF5bG9yMiBUYXlsb3IzIFRvRmlsZSBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICBcIlRvU3Rkb3V0IFRvU3RyaW5nIFRyYWNlUnVsZSBVbnRpbCBXaGlsZVwiKTtcblxuICAvLyBwYXR0ZXJuc1xuICB2YXIgcEZsb2F0Rm9ybSAgPSBcIig/Oig/OlxcXFwuXFxcXGQrfFxcXFxkK1xcXFwuXFxcXGQqfFxcXFxkKykoPzpbZUVdWystXT9cXFxcZCspPylcIjtcbiAgdmFyIHBJZGVudGlmaWVyID0gXCIoPzpbYS16QS1aXFxcXCQnXVthLXpBLVowLTlcXFxcJCddKilcIjtcblxuICAvLyByZWd1bGFyIGV4cHJlc3Npb25zXG4gIHZhciByZUZsb2F0Rm9ybSAgICA9IG5ldyBSZWdFeHAocEZsb2F0Rm9ybSk7XG4gIHZhciByZUlkZW50aWZpZXIgICA9IG5ldyBSZWdFeHAocElkZW50aWZpZXIpO1xuICB2YXIgcmVQYXR0ZXJuICAgICAgPSBuZXcgUmVnRXhwKHBJZGVudGlmaWVyICsgXCI/X1wiICsgcElkZW50aWZpZXIpO1xuICB2YXIgcmVGdW5jdGlvbkxpa2UgPSBuZXcgUmVnRXhwKHBJZGVudGlmaWVyICsgXCJcXFxccypcXFxcKFwiKTtcblxuICBmdW5jdGlvbiB0b2tlbkJhc2Uoc3RyZWFtLCBzdGF0ZSkge1xuICAgIHZhciBjaDtcblxuICAgIC8vIGdldCBuZXh0IGNoYXJhY3RlclxuICAgIGNoID0gc3RyZWFtLm5leHQoKTtcblxuICAgIC8vIHN0cmluZ1xuICAgIGlmIChjaCA9PT0gJ1wiJykge1xuICAgICAgc3RhdGUudG9rZW5pemUgPSB0b2tlblN0cmluZztcbiAgICAgIHJldHVybiBzdGF0ZS50b2tlbml6ZShzdHJlYW0sIHN0YXRlKTtcbiAgICB9XG5cbiAgICAvLyBjb21tZW50XG4gICAgaWYgKGNoID09PSAnLycpIHtcbiAgICAgIGlmIChzdHJlYW0uZWF0KCcqJykpIHtcbiAgICAgICAgc3RhdGUudG9rZW5pemUgPSB0b2tlbkNvbW1lbnQ7XG4gICAgICAgIHJldHVybiBzdGF0ZS50b2tlbml6ZShzdHJlYW0sIHN0YXRlKTtcbiAgICAgIH1cbiAgICAgIGlmIChzdHJlYW0uZWF0KFwiL1wiKSkge1xuICAgICAgICBzdHJlYW0uc2tpcFRvRW5kKCk7XG4gICAgICAgIHJldHVybiBcImNvbW1lbnRcIjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBnbyBiYWNrIG9uZSBjaGFyYWN0ZXJcbiAgICBzdHJlYW0uYmFja1VwKDEpO1xuXG4gICAgLy8gdXBkYXRlIHNjb3BlIGluZm9cbiAgICB2YXIgbSA9IHN0cmVhbS5tYXRjaCgvXihcXHcrKVxccypcXCgvLCBmYWxzZSk7XG4gICAgaWYgKG0gIT09IG51bGwgJiYgYm9kaWVkT3BzLmhhc093blByb3BlcnR5KG1bMV0pKVxuICAgICAgc3RhdGUuc2NvcGVzLnB1c2goJ2JvZGllZCcpO1xuXG4gICAgdmFyIHNjb3BlID0gY3VycmVudFNjb3BlKHN0YXRlKTtcblxuICAgIGlmIChzY29wZSA9PT0gJ2JvZGllZCcgJiYgY2ggPT09ICdbJylcbiAgICAgIHN0YXRlLnNjb3Blcy5wb3AoKTtcblxuICAgIGlmIChjaCA9PT0gJ1snIHx8IGNoID09PSAneycgfHwgY2ggPT09ICcoJylcbiAgICAgIHN0YXRlLnNjb3Blcy5wdXNoKGNoKTtcblxuICAgIHNjb3BlID0gY3VycmVudFNjb3BlKHN0YXRlKTtcblxuICAgIGlmIChzY29wZSA9PT0gJ1snICYmIGNoID09PSAnXScgfHxcbiAgICAgICAgc2NvcGUgPT09ICd7JyAmJiBjaCA9PT0gJ30nIHx8XG4gICAgICAgIHNjb3BlID09PSAnKCcgJiYgY2ggPT09ICcpJylcbiAgICAgIHN0YXRlLnNjb3Blcy5wb3AoKTtcblxuICAgIGlmIChjaCA9PT0gJzsnKSB7XG4gICAgICB3aGlsZSAoc2NvcGUgPT09ICdib2RpZWQnKSB7XG4gICAgICAgIHN0YXRlLnNjb3Blcy5wb3AoKTtcbiAgICAgICAgc2NvcGUgPSBjdXJyZW50U2NvcGUoc3RhdGUpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGxvb2sgZm9yIG9yZGVyZWQgcnVsZXNcbiAgICBpZiAoc3RyZWFtLm1hdGNoKC9cXGQrICojLywgdHJ1ZSwgZmFsc2UpKSB7XG4gICAgICByZXR1cm4gJ3F1YWxpZmllcic7XG4gICAgfVxuXG4gICAgLy8gbG9vayBmb3IgbnVtYmVyc1xuICAgIGlmIChzdHJlYW0ubWF0Y2gocmVGbG9hdEZvcm0sIHRydWUsIGZhbHNlKSkge1xuICAgICAgcmV0dXJuICdudW1iZXInO1xuICAgIH1cblxuICAgIC8vIGxvb2sgZm9yIHBsYWNlaG9sZGVyc1xuICAgIGlmIChzdHJlYW0ubWF0Y2gocmVQYXR0ZXJuLCB0cnVlLCBmYWxzZSkpIHtcbiAgICAgIHJldHVybiAndmFyaWFibGUtMyc7XG4gICAgfVxuXG4gICAgLy8gbWF0Y2ggYWxsIGJyYWNlcyBzZXBhcmF0ZWx5XG4gICAgaWYgKHN0cmVhbS5tYXRjaCgvKD86XFxbfFxcXXx7fH18XFwofFxcKSkvLCB0cnVlLCBmYWxzZSkpIHtcbiAgICAgIHJldHVybiAnYnJhY2tldCc7XG4gICAgfVxuXG4gICAgLy8gbGl0ZXJhbHMgbG9va2luZyBsaWtlIGZ1bmN0aW9uIGNhbGxzXG4gICAgaWYgKHN0cmVhbS5tYXRjaChyZUZ1bmN0aW9uTGlrZSwgdHJ1ZSwgZmFsc2UpKSB7XG4gICAgICBzdHJlYW0uYmFja1VwKDEpO1xuICAgICAgcmV0dXJuICd2YXJpYWJsZSc7XG4gICAgfVxuXG4gICAgLy8gYWxsIG90aGVyIGlkZW50aWZpZXJzXG4gICAgaWYgKHN0cmVhbS5tYXRjaChyZUlkZW50aWZpZXIsIHRydWUsIGZhbHNlKSkge1xuICAgICAgcmV0dXJuICd2YXJpYWJsZS0yJztcbiAgICB9XG5cbiAgICAvLyBvcGVyYXRvcnM7IG5vdGUgdGhhdCBvcGVyYXRvcnMgbGlrZSBAQCBvciAvOyBhcmUgbWF0Y2hlZCBzZXBhcmF0ZWx5IGZvciBlYWNoIHN5bWJvbC5cbiAgICBpZiAoc3RyZWFtLm1hdGNoKC8oPzpcXFxcfFxcK3xcXC18XFwqfFxcL3wsfDt8XFwufDp8QHx+fD18Pnw8fCZ8XFx8fF98YHwnfFxcXnxcXD98IXwlfCMpLywgdHJ1ZSwgZmFsc2UpKSB7XG4gICAgICByZXR1cm4gJ29wZXJhdG9yJztcbiAgICB9XG5cbiAgICAvLyBldmVyeXRoaW5nIGVsc2UgaXMgYW4gZXJyb3JcbiAgICByZXR1cm4gJ2Vycm9yJztcbiAgfVxuXG4gIGZ1bmN0aW9uIHRva2VuU3RyaW5nKHN0cmVhbSwgc3RhdGUpIHtcbiAgICB2YXIgbmV4dCwgZW5kID0gZmFsc2UsIGVzY2FwZWQgPSBmYWxzZTtcbiAgICB3aGlsZSAoKG5leHQgPSBzdHJlYW0ubmV4dCgpKSAhPSBudWxsKSB7XG4gICAgICBpZiAobmV4dCA9PT0gJ1wiJyAmJiAhZXNjYXBlZCkge1xuICAgICAgICBlbmQgPSB0cnVlO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGVzY2FwZWQgPSAhZXNjYXBlZCAmJiBuZXh0ID09PSAnXFxcXCc7XG4gICAgfVxuICAgIGlmIChlbmQgJiYgIWVzY2FwZWQpIHtcbiAgICAgIHN0YXRlLnRva2VuaXplID0gdG9rZW5CYXNlO1xuICAgIH1cbiAgICByZXR1cm4gJ3N0cmluZyc7XG4gIH07XG5cbiAgZnVuY3Rpb24gdG9rZW5Db21tZW50KHN0cmVhbSwgc3RhdGUpIHtcbiAgICB2YXIgcHJldiwgbmV4dDtcbiAgICB3aGlsZSgobmV4dCA9IHN0cmVhbS5uZXh0KCkpICE9IG51bGwpIHtcbiAgICAgIGlmIChwcmV2ID09PSAnKicgJiYgbmV4dCA9PT0gJy8nKSB7XG4gICAgICAgIHN0YXRlLnRva2VuaXplID0gdG9rZW5CYXNlO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHByZXYgPSBuZXh0O1xuICAgIH1cbiAgICByZXR1cm4gJ2NvbW1lbnQnO1xuICB9XG5cbiAgZnVuY3Rpb24gY3VycmVudFNjb3BlKHN0YXRlKSB7XG4gICAgdmFyIHNjb3BlID0gbnVsbDtcbiAgICBpZiAoc3RhdGUuc2NvcGVzLmxlbmd0aCA+IDApXG4gICAgICBzY29wZSA9IHN0YXRlLnNjb3Blc1tzdGF0ZS5zY29wZXMubGVuZ3RoIC0gMV07XG4gICAgcmV0dXJuIHNjb3BlO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBzdGFydFN0YXRlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHRva2VuaXplOiB0b2tlbkJhc2UsXG4gICAgICAgIHNjb3BlczogW11cbiAgICAgIH07XG4gICAgfSxcbiAgICB0b2tlbjogZnVuY3Rpb24oc3RyZWFtLCBzdGF0ZSkge1xuICAgICAgaWYgKHN0cmVhbS5lYXRTcGFjZSgpKSByZXR1cm4gbnVsbDtcbiAgICAgIHJldHVybiBzdGF0ZS50b2tlbml6ZShzdHJlYW0sIHN0YXRlKTtcbiAgICB9LFxuICAgIGluZGVudDogZnVuY3Rpb24oc3RhdGUsIHRleHRBZnRlcikge1xuICAgICAgaWYgKHN0YXRlLnRva2VuaXplICE9PSB0b2tlbkJhc2UgJiYgc3RhdGUudG9rZW5pemUgIT09IG51bGwpXG4gICAgICAgIHJldHVybiBDb2RlTWlycm9yLlBhc3M7XG5cbiAgICAgIHZhciBkZWx0YSA9IDA7XG4gICAgICBpZiAodGV4dEFmdGVyID09PSAnXScgfHwgdGV4dEFmdGVyID09PSAnXTsnIHx8XG4gICAgICAgICAgdGV4dEFmdGVyID09PSAnfScgfHwgdGV4dEFmdGVyID09PSAnfTsnIHx8XG4gICAgICAgICAgdGV4dEFmdGVyID09PSAnKTsnKVxuICAgICAgICBkZWx0YSA9IC0xO1xuXG4gICAgICByZXR1cm4gKHN0YXRlLnNjb3Blcy5sZW5ndGggKyBkZWx0YSkgKiBfY29uZmlnLmluZGVudFVuaXQ7XG4gICAgfSxcbiAgICBlbGVjdHJpY0NoYXJzOiBcInt9W10oKTtcIixcbiAgICBibG9ja0NvbW1lbnRTdGFydDogXCIvKlwiLFxuICAgIGJsb2NrQ29tbWVudEVuZDogXCIqL1wiLFxuICAgIGxpbmVDb21tZW50OiBcIi8vXCJcbiAgfTtcbn0pO1xuXG5Db2RlTWlycm9yLmRlZmluZU1JTUUoJ3RleHQveC15YWNhcycsIHtcbiAgbmFtZTogJ3lhY2FzJ1xufSk7XG5cbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==