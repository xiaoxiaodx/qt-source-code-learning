(window.webpackJsonp=window.webpackJsonp||[]).push([[6,54],{"./node_modules/codemirror/addon/mode/multiplex.js":function(e,t,n){!function(e){"use strict";e.multiplexingMode=function(t){var n=Array.prototype.slice.call(arguments,1);function i(e,t,n,i){if("string"==typeof t){var r=e.indexOf(t,n);return i&&r>-1?r+t.length:r}var o=t.exec(n?e.slice(n):e);return o?o.index+n+(i?o[0].length:0):-1}return{startState:function(){return{outer:e.startState(t),innerActive:null,inner:null}},copyState:function(n){return{outer:e.copyState(t,n.outer),innerActive:n.innerActive,inner:n.innerActive&&e.copyState(n.innerActive.mode,n.inner)}},token:function(r,o){if(o.innerActive){var l=o.innerActive;if(s=r.string,!l.close&&r.sol())return o.innerActive=o.inner=null,this.token(r,o);if((m=l.close?i(s,l.close,r.pos,l.parseDelimiters):-1)==r.pos&&!l.parseDelimiters)return r.match(l.close),o.innerActive=o.inner=null,l.delimStyle&&l.delimStyle+" "+l.delimStyle+"-close";m>-1&&(r.string=s.slice(0,m));var a=l.mode.token(r,o.inner);return m>-1&&(r.string=s),m==r.pos&&l.parseDelimiters&&(o.innerActive=o.inner=null),l.innerStyle&&(a=a?a+" "+l.innerStyle:l.innerStyle),a}for(var c=1/0,s=r.string,d=0;d<n.length;++d){var m,u=n[d];if((m=i(s,u.open,r.pos))==r.pos){u.parseDelimiters||r.match(u.open),o.innerActive=u;var p=0;if(t.indent){var v=t.indent(o.outer,"","");v!==e.Pass&&(p=v)}return o.inner=e.startState(u.mode,p),u.delimStyle&&u.delimStyle+" "+u.delimStyle+"-open"}-1!=m&&m<c&&(c=m)}c!=1/0&&(r.string=s.slice(0,c));var f=t.token(r,o.outer);return c!=1/0&&(r.string=s),f},indent:function(n,i,r){var o=n.innerActive?n.innerActive.mode:t;return o.indent?o.indent(n.innerActive?n.inner:n.outer,i,r):e.Pass},blankLine:function(i){var r=i.innerActive?i.innerActive.mode:t;if(r.blankLine&&r.blankLine(i.innerActive?i.inner:i.outer),i.innerActive)"\n"===i.innerActive.close&&(i.innerActive=i.inner=null);else for(var o=0;o<n.length;++o){var l=n[o];"\n"===l.open&&(i.innerActive=l,i.inner=e.startState(l.mode,r.indent?r.indent(i.outer,"",""):0))}},electricChars:t.electricChars,innerMode:function(e){return e.inner?{state:e.inner,mode:e.innerActive.mode}:{state:e.outer,mode:t}}}}}(n("./node_modules/codemirror/lib/codemirror.js"))},"./node_modules/codemirror/mode/htmlembedded/htmlembedded.js":function(e,t,n){!function(e){"use strict";e.defineMode("htmlembedded",(function(t,n){var i=n.closeComment||"--%>";return e.multiplexingMode(e.getMode(t,"htmlmixed"),{open:n.openComment||"<%--",close:i,delimStyle:"comment",mode:{token:function(e){return e.skipTo(i)||e.skipToEnd(),"comment"}}},{open:n.open||n.scriptStartRegex||"<%",close:n.close||n.scriptEndRegex||"%>",mode:e.getMode(t,n.scriptingModeSpec)})}),"htmlmixed"),e.defineMIME("application/x-ejs",{name:"htmlembedded",scriptingModeSpec:"javascript"}),e.defineMIME("application/x-aspx",{name:"htmlembedded",scriptingModeSpec:"text/x-csharp"}),e.defineMIME("application/x-jsp",{name:"htmlembedded",scriptingModeSpec:"text/x-java"}),e.defineMIME("application/x-erb",{name:"htmlembedded",scriptingModeSpec:"ruby"})}(n("./node_modules/codemirror/lib/codemirror.js"),n("./node_modules/codemirror/mode/htmlmixed/htmlmixed.js"),n("./node_modules/codemirror/addon/mode/multiplex.js"))},"./node_modules/codemirror/mode/htmlmixed/htmlmixed.js":function(e,t,n){!function(e){"use strict";var t={script:[["lang",/(javascript|babel)/i,"javascript"],["type",/^(?:text|application)\/(?:x-)?(?:java|ecma)script$|^module$|^$/i,"javascript"],["type",/./,"text/plain"],[null,null,"javascript"]],style:[["lang",/^css$/i,"css"],["type",/^(text\/)?(x-)?(stylesheet|css)$/i,"css"],["type",/./,"text/plain"],[null,null,"css"]]},n={};function getAttrValue(e,t){var i=e.match(function(e){var t=n[e];return t||(n[e]=new RegExp("\\s+"+e+"\\s*=\\s*('|\")?([^'\"]+)('|\")?\\s*"))}(t));return i?/^\s*(.*?)\s*$/.exec(i[2])[1]:""}function i(e,t){return new RegExp((t?"^":"")+"</s*"+e+"s*>","i")}function r(e,t){for(var n in e)for(var i=t[n]||(t[n]=[]),r=e[n],o=r.length-1;o>=0;o--)i.unshift(r[o])}e.defineMode("htmlmixed",(function(n,o){var l=e.getMode(n,{name:"xml",htmlMode:!0,multilineTagIndentFactor:o.multilineTagIndentFactor,multilineTagIndentPastTag:o.multilineTagIndentPastTag}),a={},c=o&&o.tags,s=o&&o.scriptTypes;if(r(t,a),c&&r(c,a),s)for(var d=s.length-1;d>=0;d--)a.script.unshift(["type",s[d].matches,s[d].mode]);function m(t,r){var o,c=l.token(t,r.htmlState),s=/\btag\b/.test(c);if(s&&!/[<>\s\/]/.test(t.current())&&(o=r.htmlState.tagName&&r.htmlState.tagName.toLowerCase())&&a.hasOwnProperty(o))r.inTag=o+" ";else if(r.inTag&&s&&/>$/.test(t.current())){var d=/^([\S]+) (.*)/.exec(r.inTag);r.inTag=null;var u=">"==t.current()&&function(e,t){for(var n=0;n<e.length;n++){var i=e[n];if(!i[0]||i[1].test(getAttrValue(t,i[0])))return i[2]}}(a[d[1]],d[2]),p=e.getMode(n,u),v=i(d[1],!0),f=i(d[1],!1);r.token=function(e,t){return e.match(v,!1)?(t.token=m,t.localState=t.localMode=null,null):function(e,t,n){var i=e.current(),r=i.search(t);return r>-1?e.backUp(i.length-r):i.match(/<\/?$/)&&(e.backUp(i.length),e.match(t,!1)||e.match(i)),n}(e,f,t.localMode.token(e,t.localState))},r.localMode=p,r.localState=e.startState(p,l.indent(r.htmlState,"",""))}else r.inTag&&(r.inTag+=t.current(),t.eol()&&(r.inTag+=" "));return c}return{startState:function(){return{token:m,inTag:null,localMode:null,localState:null,htmlState:e.startState(l)}},copyState:function(t){var n;return t.localState&&(n=e.copyState(t.localMode,t.localState)),{token:t.token,inTag:t.inTag,localMode:t.localMode,localState:n,htmlState:e.copyState(l,t.htmlState)}},token:function(e,t){return t.token(e,t)},indent:function(t,n,i){return!t.localMode||/^\s*<\//.test(n)?l.indent(t.htmlState,n,i):t.localMode.indent?t.localMode.indent(t.localState,n,i):e.Pass},innerMode:function(e){return{state:e.localState||e.htmlState,mode:e.localMode||l}}}}),"xml","javascript","css"),e.defineMIME("text/html","htmlmixed")}(n("./node_modules/codemirror/lib/codemirror.js"),n("./node_modules/codemirror/mode/xml/xml.js"),n("./node_modules/codemirror/mode/javascript/javascript.js"),n("./node_modules/codemirror/mode/css/css.js"))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29kZW1pcnJvci9hZGRvbi9tb2RlL211bHRpcGxleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29kZW1pcnJvci9tb2RlL2h0bWxlbWJlZGRlZC9odG1sZW1iZWRkZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvZGVtaXJyb3IvbW9kZS9odG1sbWl4ZWQvaHRtbG1peGVkLmpzIl0sIm5hbWVzIjpbIkNvZGVNaXJyb3IiLCJtdWx0aXBsZXhpbmdNb2RlIiwib3V0ZXIiLCJvdGhlcnMiLCJBcnJheSIsInByb3RvdHlwZSIsInNsaWNlIiwiY2FsbCIsImFyZ3VtZW50cyIsImluZGV4T2YiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZnJvbSIsInJldHVybkVuZCIsImZvdW5kIiwibGVuZ3RoIiwibSIsImV4ZWMiLCJpbmRleCIsInN0YXJ0U3RhdGUiLCJpbm5lckFjdGl2ZSIsImlubmVyIiwiY29weVN0YXRlIiwic3RhdGUiLCJtb2RlIiwidG9rZW4iLCJzdHJlYW0iLCJjdXJJbm5lciIsIm9sZENvbnRlbnQiLCJjbG9zZSIsInNvbCIsInRoaXMiLCJwb3MiLCJwYXJzZURlbGltaXRlcnMiLCJtYXRjaCIsImRlbGltU3R5bGUiLCJpbm5lclRva2VuIiwiaW5uZXJTdHlsZSIsImN1dE9mZiIsIkluZmluaXR5IiwiaSIsIm90aGVyIiwib3BlbiIsIm91dGVySW5kZW50IiwiaW5kZW50IiwicG9zc2libGVPdXRlckluZGVudCIsIlBhc3MiLCJvdXRlclRva2VuIiwidGV4dEFmdGVyIiwibGluZSIsImJsYW5rTGluZSIsImVsZWN0cmljQ2hhcnMiLCJpbm5lck1vZGUiLCJtb2QiLCJkZWZpbmVNb2RlIiwiY29uZmlnIiwicGFyc2VyQ29uZmlnIiwiY2xvc2VDb21tZW50IiwiZ2V0TW9kZSIsIm9wZW5Db21tZW50Iiwic2tpcFRvIiwic2tpcFRvRW5kIiwic2NyaXB0U3RhcnRSZWdleCIsInNjcmlwdEVuZFJlZ2V4Iiwic2NyaXB0aW5nTW9kZVNwZWMiLCJkZWZpbmVNSU1FIiwibmFtZSIsImRlZmF1bHRUYWdzIiwic2NyaXB0Iiwic3R5bGUiLCJhdHRyUmVnZXhwQ2FjaGUiLCJnZXRBdHRyVmFsdWUiLCJ0ZXh0IiwiYXR0ciIsInJlZ2V4cCIsIlJlZ0V4cCIsImdldEF0dHJSZWdleHAiLCJnZXRUYWdSZWdleHAiLCJ0YWdOYW1lIiwiYW5jaG9yZWQiLCJhZGRUYWdzIiwidG8iLCJ0YWciLCJkZXN0Iiwic291cmNlIiwidW5zaGlmdCIsImh0bWxNb2RlIiwibXVsdGlsaW5lVGFnSW5kZW50RmFjdG9yIiwibXVsdGlsaW5lVGFnSW5kZW50UGFzdFRhZyIsInRhZ3MiLCJjb25maWdUYWdzIiwiY29uZmlnU2NyaXB0Iiwic2NyaXB0VHlwZXMiLCJtYXRjaGVzIiwiaHRtbCIsImh0bWxTdGF0ZSIsInRlc3QiLCJjdXJyZW50IiwidG9Mb3dlckNhc2UiLCJoYXNPd25Qcm9wZXJ0eSIsImluVGFnIiwibW9kZVNwZWMiLCJ0YWdJbmZvIiwidGFnVGV4dCIsInNwZWMiLCJmaW5kTWF0Y2hpbmdNb2RlIiwiZW5kVGFnQSIsImVuZFRhZyIsImxvY2FsU3RhdGUiLCJsb2NhbE1vZGUiLCJwYXQiLCJjdXIiLCJzZWFyY2giLCJiYWNrVXAiLCJtYXliZUJhY2t1cCIsImVvbCIsImxvY2FsIl0sIm1hcHBpbmdzIjoiaUlBVUcsU0FBU0EsR0FDWixhQUVBQSxFQUFXQyxpQkFBbUIsU0FBU0MsR0FFckMsSUFBSUMsRUFBU0MsTUFBTUMsVUFBVUMsTUFBTUMsS0FBS0MsVUFBVyxHQUVuRCxTQUFTQyxFQUFRQyxFQUFRQyxFQUFTQyxFQUFNQyxHQUN0QyxHQUFzQixpQkFBWEYsRUFBcUIsQ0FDOUIsSUFBSUcsRUFBUUosRUFBT0QsUUFBUUUsRUFBU0MsR0FDcEMsT0FBT0MsR0FBYUMsR0FBUyxFQUFJQSxFQUFRSCxFQUFRSSxPQUFTRCxFQUU1RCxJQUFJRSxFQUFJTCxFQUFRTSxLQUFLTCxFQUFPRixFQUFPSixNQUFN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T0FBUzFFLEVBQU91RSxVQUNsQnZFLEVBQU95RixRQUFPNUYsRUFBTTZFLE9BQVMsTUFFbkMsT0FBTy9CLEVBR1QsTUFBTyxDQUNMbEQsV0FBWSxXQUVWLE1BQU8sQ0FBQ00sTUFBT3FFLEVBQU1NLE1BQU8sS0FBTVMsVUFBVyxLQUFNRCxXQUFZLEtBQU1iLFVBRHpEL0YsRUFBV21CLFdBQVdtRSxLQUlwQ2hFLFVBQVcsU0FBVUMsR0FDbkIsSUFBSTZGLEVBSUosT0FISTdGLEVBQU1xRixhQUNSUSxFQUFRcEgsRUFBV3NCLFVBQVVDLEVBQU1zRixVQUFXdEYsRUFBTXFGLGFBRS9DLENBQUNuRixNQUFPRixFQUFNRSxNQUFPMkUsTUFBTzdFLEVBQU02RSxNQUNqQ1MsVUFBV3RGLEVBQU1zRixVQUFXRCxXQUFZUSxFQUN4Q3JCLFVBQVcvRixFQUFXc0IsVUFBVWdFLEVBQVUvRCxFQUFNd0UsYUFHMUR0RSxNQUFPLFNBQVVDLEVBQVFILEdBQ3ZCLE9BQU9BLEVBQU1FLE1BQU1DLEVBQVFILElBRzdCcUIsT0FBUSxTQUFVckIsRUFBT3lCLEVBQVdDLEdBQ2xDLE9BQUsxQixFQUFNc0YsV0FBYSxVQUFVYixLQUFLaEQsR0FDOUJzQyxFQUFTMUMsT0FBT3JCLEVBQU13RSxVQUFXL0MsRUFBV0MsR0FDNUMxQixFQUFNc0YsVUFBVWpFLE9BQ2hCckIsRUFBTXNGLFVBQVVqRSxPQUFPckIsRUFBTXFGLFdBQVk1RCxFQUFXQyxHQUVwRGpELEVBQVc4QyxNQUd0Qk0sVUFBVyxTQUFVN0IsR0FDbkIsTUFBTyxDQUFDQSxNQUFPQSxFQUFNcUYsWUFBY3JGLEVBQU13RSxVQUFXdkUsS0FBTUQsRUFBTXNGLFdBQWF2QixPQUdoRixNQUFPLGFBQWMsT0FFeEJ0RixFQUFXaUUsV0FBVyxZQUFhLGFBakpqQ1osQ0FBSSxFQUFRLCtDQUF5QixFQUFRLDZDQUFlLEVBQVEsMkRBQTZCLEVBQVEiLCJmaWxlIjoiNi5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb2RlTWlycm9yLCBjb3B5cmlnaHQgKGMpIGJ5IE1hcmlqbiBIYXZlcmJla2UgYW5kIG90aGVyc1xuLy8gRGlzdHJpYnV0ZWQgdW5kZXIgYW4gTUlUIGxpY2Vuc2U6IGh0dHBzOi8vY29kZW1pcnJvci5uZXQvTElDRU5TRVxuXG4oZnVuY3Rpb24obW9kKSB7XG4gIGlmICh0eXBlb2YgZXhwb3J0cyA9PSBcIm9iamVjdFwiICYmIHR5cGVvZiBtb2R1bGUgPT0gXCJvYmplY3RcIikgLy8gQ29tbW9uSlNcbiAgICBtb2QocmVxdWlyZShcIi4uLy4uL2xpYi9jb2RlbWlycm9yXCIpKTtcbiAgZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCkgLy8gQU1EXG4gICAgZGVmaW5lKFtcIi4uLy4uL2xpYi9jb2RlbWlycm9yXCJdLCBtb2QpO1xuICBlbHNlIC8vIFBsYWluIGJyb3dzZXIgZW52XG4gICAgbW9kKENvZGVNaXJyb3IpO1xufSkoZnVuY3Rpb24oQ29kZU1pcnJvcikge1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbkNvZGVNaXJyb3IubXVsdGlwbGV4aW5nTW9kZSA9IGZ1bmN0aW9uKG91dGVyIC8qLCBvdGhlcnMgKi8pIHtcbiAgLy8gT3RoZXJzIHNob3VsZCBiZSB7b3BlbiwgY2xvc2UsIG1vZGUgWywgZGVsaW1TdHlsZV0gWywgaW5uZXJTdHlsZV19IG9iamVjdHNcbiAgdmFyIG90aGVycyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG5cbiAgZnVuY3Rpb24gaW5kZXhPZihzdHJpbmcsIHBhdHRlcm4sIGZyb20sIHJldHVybkVuZCkge1xuICAgIGlmICh0eXBlb2YgcGF0dGVybiA9PSBcInN0cmluZ1wiKSB7XG4gICAgICB2YXIgZm91bmQgPSBzdHJpbmcuaW5kZXhPZihwYXR0ZXJuLCBmcm9tKTtcbiAgICAgIHJldHVybiByZXR1cm5FbmQgJiYgZm91bmQgPiAtMSA/IGZvdW5kICsgcGF0dGVybi5sZW5ndGggOiBmb3VuZDtcbiAgICB9XG4gICAgdmFyIG0gPSBwYXR0ZXJuLmV4ZWMoZnJvbSA/IHN0cmluZy5zbGljZShmcm9tKSA6IHN0cmluZyk7XG4gICAgcmV0dXJuIG0gPyBtLmluZGV4ICsgZnJvbSArIChyZXR1cm5FbmQgPyBtWzBdLmxlbmd0aCA6IDApIDogLTE7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHN0YXJ0U3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgb3V0ZXI6IENvZGVNaXJyb3Iuc3RhcnRTdGF0ZShvdXRlciksXG4gICAgICAgIGlubmVyQWN0aXZlOiBudWxsLFxuICAgICAgICBpbm5lcjogbnVsbFxuICAgICAgfTtcbiAgICB9LFxuXG4gICAgY29weVN0YXRlOiBmdW5jdGlvbihzdGF0ZSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgb3V0ZXI6IENvZGVNaXJyb3IuY29weVN0YXRlKG91dGVyLCBzdGF0ZS5vdXRlciksXG4gICAgICAgIGlubmVyQWN0aXZlOiBzdGF0ZS5pbm5lckFjdGl2ZSxcbiAgICAgICAgaW5uZXI6IHN0YXRlLmlubmVyQWN0aXZlICYmIENvZGVNaXJyb3IuY29weVN0YXRlKHN0YXRlLmlubmVyQWN0aXZlLm1vZGUsIHN0YXRlLmlubmVyKVxuICAgICAgfTtcbiAgICB9LFxuXG4gICAgdG9rZW46IGZ1bmN0aW9uKHN0cmVhbSwgc3RhdGUpIHtcbiAgICAgIGlmICghc3RhdGUuaW5uZXJBY3RpdmUpIHtcbiAgICAgICAgdmFyIGN1dE9mZiA9IEluZmluaXR5LCBvbGRDb250ZW50ID0gc3RyZWFtLnN0cmluZztcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvdGhlcnMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICB2YXIgb3RoZXIgPSBvdGhlcnNbaV07XG4gICAgICAgICAgdmFyIGZvdW5kID0gaW5kZXhPZihvbGRDb250ZW50LCBvdGhlci5vcGVuLCBzdHJlYW0ucG9zKTtcbiAgICAgICAgICBpZiAoZm91bmQgPT0gc3RyZWFtLnBvcykge1xuICAgICAgICAgICAgaWYgKCFvdGhlci5wYXJzZURlbGltaXRlcnMpIHN0cmVhbS5tYXRjaChvdGhlci5vcGVuKTtcbiAgICAgICAgICAgIHN0YXRlLmlubmVyQWN0aXZlID0gb3RoZXI7XG5cbiAgICAgICAgICAgIC8vIEdldCB0aGUgb3V0ZXIgaW5kZW50LCBtYWtpbmcgc3VyZSB0byBoYW5kbGUgQ29kZU1pcnJvci5QYXNzXG4gICAgICAgICAgICB2YXIgb3V0ZXJJbmRlbnQgPSAwO1xuICAgICAgICAgICAgaWYgKG91dGVyLmluZGVudCkge1xuICAgICAgICAgICAgICB2YXIgcG9zc2libGVPdXRlckluZGVudCA9IG91dGVyLmluZGVudChzdGF0ZS5vdXRlciwgXCJcIiwgXCJcIik7XG4gICAgICAgICAgICAgIGlmIChwb3NzaWJsZU91dGVySW5kZW50ICE9PSBDb2RlTWlycm9yLlBhc3MpIG91dGVySW5kZW50ID0gcG9zc2libGVPdXRlckluZGVudDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc3RhdGUuaW5uZXIgPSBDb2RlTWlycm9yLnN0YXJ0U3RhdGUob3RoZXIubW9kZSwgb3V0ZXJJbmRlbnQpO1xuICAgICAgICAgICAgcmV0dXJuIG90aGVyLmRlbGltU3R5bGUgJiYgKG90aGVyLmRlbGltU3R5bGUgKyBcIiBcIiArIG90aGVyLmRlbGltU3R5bGUgKyBcIi1vcGVuXCIpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoZm91bmQgIT0gLTEgJiYgZm91bmQgPCBjdXRPZmYpIHtcbiAgICAgICAgICAgIGN1dE9mZiA9IGZvdW5kO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoY3V0T2ZmICE9IEluZmluaXR5KSBzdHJlYW0uc3RyaW5nID0gb2xkQ29udGVudC5zbGljZSgwLCBjdXRPZmYpO1xuICAgICAgICB2YXIgb3V0ZXJUb2tlbiA9IG91dGVyLnRva2VuKHN0cmVhbSwgc3RhdGUub3V0ZXIpO1xuICAgICAgICBpZiAoY3V0T2ZmICE9IEluZmluaXR5KSBzdHJlYW0uc3RyaW5nID0gb2xkQ29udGVudDtcbiAgICAgICAgcmV0dXJuIG91dGVyVG9rZW47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgY3VySW5uZXIgPSBzdGF0ZS5pbm5lckFjdGl2ZSwgb2xkQ29udGVudCA9IHN0cmVhbS5zdHJpbmc7XG4gICAgICAgIGlmICghY3VySW5uZXIuY2xvc2UgJiYgc3RyZWFtLnNvbCgpKSB7XG4gICAgICAgICAgc3RhdGUuaW5uZXJBY3RpdmUgPSBzdGF0ZS5pbm5lciA9IG51bGw7XG4gICAgICAgICAgcmV0dXJuIHRoaXMudG9rZW4oc3RyZWFtLCBzdGF0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGZvdW5kID0gY3VySW5uZXIuY2xvc2UgPyBpbmRleE9mKG9sZENvbnRlbnQsIGN1cklubmVyLmNsb3NlLCBzdHJlYW0ucG9zLCBjdXJJbm5lci5wYXJzZURlbGltaXRlcnMpIDogLTE7XG4gICAgICAgIGlmIChmb3VuZCA9PSBzdHJlYW0ucG9zICYmICFjdXJJbm5lci5wYXJzZURlbGltaXRlcnMpIHtcbiAgICAgICAgICBzdHJlYW0ubWF0Y2goY3VySW5uZXIuY2xvc2UpO1xuICAgICAgICAgIHN0YXRlLmlubmVyQWN0aXZlID0gc3RhdGUuaW5uZXIgPSBudWxsO1xuICAgICAgICAgIHJldHVybiBjdXJJbm5lci5kZWxpbVN0eWxlICYmIChjdXJJbm5lci5kZWxpbVN0eWxlICsgXCIgXCIgKyBjdXJJbm5lci5kZWxpbVN0eWxlICsgXCItY2xvc2VcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZvdW5kID4gLTEpIHN0cmVhbS5zdHJpbmcgPSBvbGRDb250ZW50LnNsaWNlKDAsIGZvdW5kKTtcbiAgICAgICAgdmFyIGlubmVyVG9rZW4gPSBjdXJJbm5lci5tb2RlLnRva2VuKHN0cmVhbSwgc3RhdGUuaW5uZXIpO1xuICAgICAgICBpZiAoZm91bmQgPiAtMSkgc3RyZWFtLnN0cmluZyA9IG9sZENvbnRlbnQ7XG5cbiAgICAgICAgaWYgKGZvdW5kID09IHN0cmVhbS5wb3MgJiYgY3VySW5uZXIucGFyc2VEZWxpbWl0ZXJzKVxuICAgICAgICAgIHN0YXRlLmlubmVyQWN0aXZlID0gc3RhdGUuaW5uZXIgPSBudWxsO1xuXG4gICAgICAgIGlmIChjdXJJbm5lci5pbm5lclN0eWxlKSB7XG4gICAgICAgICAgaWYgKGlubmVyVG9rZW4pIGlubmVyVG9rZW4gPSBpbm5lclRva2VuICsgXCIgXCIgKyBjdXJJbm5lci5pbm5lclN0eWxlO1xuICAgICAgICAgIGVsc2UgaW5uZXJUb2tlbiA9IGN1cklubmVyLmlubmVyU3R5bGU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gaW5uZXJUb2tlbjtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgaW5kZW50OiBmdW5jdGlvbihzdGF0ZSwgdGV4dEFmdGVyLCBsaW5lKSB7XG4gICAgICB2YXIgbW9kZSA9IHN0YXRlLmlubmVyQWN0aXZlID8gc3RhdGUuaW5uZXJBY3RpdmUubW9kZSA6IG91dGVyO1xuICAgICAgaWYgKCFtb2RlLmluZGVudCkgcmV0dXJuIENvZGVNaXJyb3IuUGFzcztcbiAgICAgIHJldHVybiBtb2RlLmluZGVudChzdGF0ZS5pbm5lckFjdGl2ZSA/IHN0YXRlLmlubmVyIDogc3RhdGUub3V0ZXIsIHRleHRBZnRlciwgbGluZSk7XG4gICAgfSxcblxuICAgIGJsYW5rTGluZTogZnVuY3Rpb24oc3RhdGUpIHtcbiAgICAgIHZhciBtb2RlID0gc3RhdGUuaW5uZXJBY3RpdmUgPyBzdGF0ZS5pbm5lckFjdGl2ZS5tb2RlIDogb3V0ZXI7XG4gICAgICBpZiAobW9kZS5ibGFua0xpbmUpIHtcbiAgICAgICAgbW9kZS5ibGFua0xpbmUoc3RhdGUuaW5uZXJBY3RpdmUgPyBzdGF0ZS5pbm5lciA6IHN0YXRlLm91dGVyKTtcbiAgICAgIH1cbiAgICAgIGlmICghc3RhdGUuaW5uZXJBY3RpdmUpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvdGhlcnMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICB2YXIgb3RoZXIgPSBvdGhlcnNbaV07XG4gICAgICAgICAgaWYgKG90aGVyLm9wZW4gPT09IFwiXFxuXCIpIHtcbiAgICAgICAgICAgIHN0YXRlLmlubmVyQWN0aXZlID0gb3RoZXI7XG4gICAgICAgICAgICBzdGF0ZS5pbm5lciA9IENvZGVNaXJyb3Iuc3RhcnRTdGF0ZShvdGhlci5tb2RlLCBtb2RlLmluZGVudCA/IG1vZGUuaW5kZW50KHN0YXRlLm91dGVyLCBcIlwiLCBcIlwiKSA6IDApO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChzdGF0ZS5pbm5lckFjdGl2ZS5jbG9zZSA9PT0gXCJcXG5cIikge1xuICAgICAgICBzdGF0ZS5pbm5lckFjdGl2ZSA9IHN0YXRlLmlubmVyID0gbnVsbDtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgZWxlY3RyaWNDaGFyczogb3V0ZXIuZWxlY3RyaWNDaGFycyxcblxuICAgIGlubmVyTW9kZTogZnVuY3Rpb24oc3RhdGUpIHtcbiAgICAgIHJldHVybiBzdGF0ZS5pbm5lciA/IHtzdGF0ZTogc3RhdGUuaW5uZXIsIG1vZGU6IHN0YXRlLmlubmVyQWN0aXZlLm1vZGV9IDoge3N0YXRlOiBzdGF0ZS5vdXRlciwgbW9kZTogb3V0ZXJ9O1xuICAgIH1cbiAgfTtcbn07XG5cbn0pO1xuIiwiLy8gQ29kZU1pcnJvciwgY29weXJpZ2h0IChjKSBieSBNYXJpam4gSGF2ZXJiZWtlIGFuZCBvdGhlcnNcbi8vIERpc3RyaWJ1dGVkIHVuZGVyIGFuIE1JVCBsaWNlbnNlOiBodHRwczovL2NvZGVtaXJyb3IubmV0L0xJQ0VOU0VcblxuKGZ1bmN0aW9uKG1vZCkge1xuICBpZiAodHlwZW9mIGV4cG9ydHMgPT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgbW9kdWxlID09IFwib2JqZWN0XCIpIC8vIENvbW1vbkpTXG4gICAgbW9kKHJlcXVpcmUoXCIuLi8uLi9saWIvY29kZW1pcnJvclwiKSwgcmVxdWlyZShcIi4uL2h0bWxtaXhlZC9odG1sbWl4ZWRcIiksXG4gICAgICAgIHJlcXVpcmUoXCIuLi8uLi9hZGRvbi9tb2RlL211bHRpcGxleFwiKSk7XG4gIGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQpIC8vIEFNRFxuICAgIGRlZmluZShbXCIuLi8uLi9saWIvY29kZW1pcnJvclwiLCBcIi4uL2h0bWxtaXhlZC9odG1sbWl4ZWRcIixcbiAgICAgICAgICAgIFwiLi4vLi4vYWRkb24vbW9kZS9tdWx0aXBsZXhcIl0sIG1vZCk7XG4gIGVsc2UgLy8gUGxhaW4gYnJvd3NlciBlbnZcbiAgICBtb2QoQ29kZU1pcnJvcik7XG59KShmdW5jdGlvbihDb2RlTWlycm9yKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIENvZGVNaXJyb3IuZGVmaW5lTW9kZShcImh0bWxlbWJlZGRlZFwiLCBmdW5jdGlvbihjb25maWcsIHBhcnNlckNvbmZpZykge1xuICAgIHZhciBjbG9zZUNvbW1lbnQgPSBwYXJzZXJDb25maWcuY2xvc2VDb21tZW50IHx8IFwiLS0lPlwiXG4gICAgcmV0dXJuIENvZGVNaXJyb3IubXVsdGlwbGV4aW5nTW9kZShDb2RlTWlycm9yLmdldE1vZGUoY29uZmlnLCBcImh0bWxtaXhlZFwiKSwge1xuICAgICAgb3BlbjogcGFyc2VyQ29uZmlnLm9wZW5Db21tZW50IHx8IFwiPCUtLVwiLFxuICAgICAgY2xvc2U6IGNsb3NlQ29tbWVudCxcbiAgICAgIGRlbGltU3R5bGU6IFwiY29tbWVudFwiLFxuICAgICAgbW9kZToge3Rva2VuOiBmdW5jdGlvbihzdHJlYW0pIHtcbiAgICAgICAgc3RyZWFtLnNraXBUbyhjbG9zZUNvbW1lbnQpIHx8IHN0cmVhbS5za2lwVG9FbmQoKVxuICAgICAgICByZXR1cm4gXCJjb21tZW50XCJcbiAgICAgIH19XG4gICAgfSwge1xuICAgICAgb3BlbjogcGFyc2VyQ29uZmlnLm9wZW4gfHwgcGFyc2VyQ29uZmlnLnNjcmlwdFN0YXJ0UmVnZXggfHwgXCI8JVwiLFxuICAgICAgY2xvc2U6IHBhcnNlckNvbmZpZy5jbG9zZSB8fCBwYXJzZXJDb25maWcuc2NyaXB0RW5kUmVnZXggfHwgXCIlPlwiLFxuICAgICAgbW9kZTogQ29kZU1pcnJvci5nZXRNb2RlKGNvbmZpZywgcGFyc2VyQ29uZmlnLnNjcmlwdGluZ01vZGVTcGVjKVxuICAgIH0pO1xuICB9LCBcImh0bWxtaXhlZFwiKTtcblxuICBDb2RlTWlycm9yLmRlZmluZU1JTUUoXCJhcHBsaWNhdGlvbi94LWVqc1wiLCB7bmFtZTogXCJodG1sZW1iZWRkZWRcIiwgc2NyaXB0aW5nTW9kZVNwZWM6XCJqYXZhc2NyaXB0XCJ9KTtcbiAgQ29kZU1pcnJvci5kZWZpbmVNSU1FKFwiYXBwbGljYXRpb24veC1hc3B4XCIsIHtuYW1lOiBcImh0bWxlbWJlZGRlZFwiLCBzY3JpcHRpbmdNb2RlU3BlYzpcInRleHQveC1jc2hhcnBcIn0pO1xuICBDb2RlTWlycm9yLmRlZmluZU1JTUUoXCJhcHBsaWNhdGlvbi94LWpzcFwiLCB7bmFtZTogXCJodG1sZW1iZWRkZWRcIiwgc2NyaXB0aW5nTW9kZVNwZWM6XCJ0ZXh0L3gtamF2YVwifSk7XG4gIENvZGVNaXJyb3IuZGVmaW5lTUlNRShcImFwcGxpY2F0aW9uL3gtZXJiXCIsIHtuYW1lOiBcImh0bWxlbWJlZGRlZFwiLCBzY3JpcHRpbmdNb2RlU3BlYzpcInJ1YnlcIn0pO1xufSk7XG4iLCIvLyBDb2RlTWlycm9yLCBjb3B5cmlnaHQgKGMpIGJ5IE1hcmlqbiBIYXZlcmJla2UgYW5kIG90aGVyc1xuLy8gRGlzdHJpYnV0ZWQgdW5kZXIgYW4gTUlUIGxpY2Vuc2U6IGh0dHBzOi8vY29kZW1pcnJvci5uZXQvTElDRU5TRVxuXG4oZnVuY3Rpb24obW9kKSB7XG4gIGlmICh0eXBlb2YgZXhwb3J0cyA9PSBcIm9iamVjdFwiICYmIHR5cGVvZiBtb2R1bGUgPT0gXCJvYmplY3RcIikgLy8gQ29tbW9uSlNcbiAgICBtb2QocmVxdWlyZShcIi4uLy4uL2xpYi9jb2RlbWlycm9yXCIpLCByZXF1aXJlKFwiLi4veG1sL3htbFwiKSwgcmVxdWlyZShcIi4uL2phdmFzY3JpcHQvamF2YXNjcmlwdFwiKSwgcmVxdWlyZShcIi4uL2Nzcy9jc3NcIikpO1xuICBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSAvLyBBTURcbiAgICBkZWZpbmUoW1wiLi4vLi4vbGliL2NvZGVtaXJyb3JcIiwgXCIuLi94bWwveG1sXCIsIFwiLi4vamF2YXNjcmlwdC9qYXZhc2NyaXB0XCIsIFwiLi4vY3NzL2Nzc1wiXSwgbW9kKTtcbiAgZWxzZSAvLyBQbGFpbiBicm93c2VyIGVudlxuICAgIG1vZChDb2RlTWlycm9yKTtcbn0pKGZ1bmN0aW9uKENvZGVNaXJyb3IpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIGRlZmF1bHRUYWdzID0ge1xuICAgIHNjcmlwdDogW1xuICAgICAgW1wibGFuZ1wiLCAvKGphdmFzY3JpcHR8YmFiZWwpL2ksIFwiamF2YXNjcmlwdFwiXSxcbiAgICAgIFtcInR5cGVcIiwgL14oPzp0ZXh0fGFwcGxpY2F0aW9uKVxcLyg/OngtKT8oPzpqYXZhfGVjbWEpc2NyaXB0JHxebW9kdWxlJHxeJC9pLCBcImphdmFzY3JpcHRcIl0sXG4gICAgICBbXCJ0eXBlXCIsIC8uLywgXCJ0ZXh0L3BsYWluXCJdLFxuICAgICAgW251bGwsIG51bGwsIFwiamF2YXNjcmlwdFwiXVxuICAgIF0sXG4gICAgc3R5bGU6ICBbXG4gICAgICBbXCJsYW5nXCIsIC9eY3NzJC9pLCBcImNzc1wiXSxcbiAgICAgIFtcInR5cGVcIiwgL14odGV4dFxcLyk/KHgtKT8oc3R5bGVzaGVldHxjc3MpJC9pLCBcImNzc1wiXSxcbiAgICAgIFtcInR5cGVcIiwgLy4vLCBcInRleHQvcGxhaW5cIl0sXG4gICAgICBbbnVsbCwgbnVsbCwgXCJjc3NcIl1cbiAgICBdXG4gIH07XG5cbiAgZnVuY3Rpb24gbWF5YmVCYWNrdXAoc3RyZWFtLCBwYXQsIHN0eWxlKSB7XG4gICAgdmFyIGN1ciA9IHN0cmVhbS5jdXJyZW50KCksIGNsb3NlID0gY3VyLnNlYXJjaChwYXQpO1xuICAgIGlmIChjbG9zZSA+IC0xKSB7XG4gICAgICBzdHJlYW0uYmFja1VwKGN1ci5sZW5ndGggLSBjbG9zZSk7XG4gICAgfSBlbHNlIGlmIChjdXIubWF0Y2goLzxcXC8/JC8pKSB7XG4gICAgICBzdHJlYW0uYmFja1VwKGN1ci5sZW5ndGgpO1xuICAgICAgaWYgKCFzdHJlYW0ubWF0Y2gocGF0LCBmYWxzZSkpIHN0cmVhbS5tYXRjaChjdXIpO1xuICAgIH1cbiAgICByZXR1cm4gc3R5bGU7XG4gIH1cblxuICB2YXIgYXR0clJlZ2V4cENhY2hlID0ge307XG4gIGZ1bmN0aW9uIGdldEF0dHJSZWdleHAoYXR0cikge1xuICAgIHZhciByZWdleHAgPSBhdHRyUmVnZXhwQ2FjaGVbYXR0cl07XG4gICAgaWYgKHJlZ2V4cCkgcmV0dXJuIHJlZ2V4cDtcbiAgICByZXR1cm4gYXR0clJlZ2V4cENhY2hlW2F0dHJdID0gbmV3IFJlZ0V4cChcIlxcXFxzK1wiICsgYXR0ciArIFwiXFxcXHMqPVxcXFxzKignfFxcXCIpPyhbXidcXFwiXSspKCd8XFxcIik/XFxcXHMqXCIpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0QXR0clZhbHVlKHRleHQsIGF0dHIpIHtcbiAgICB2YXIgbWF0Y2ggPSB0ZXh0Lm1hdGNoKGdldEF0dHJSZWdleHAoYXR0cikpXG4gICAgcmV0dXJuIG1hdGNoID8gL15cXHMqKC4qPylcXHMqJC8uZXhlYyhtYXRjaFsyXSlbMV0gOiBcIlwiXG4gIH1cblxuICBmdW5jdGlvbiBnZXRUYWdSZWdleHAodGFnTmFtZSwgYW5jaG9yZWQpIHtcbiAgICByZXR1cm4gbmV3IFJlZ0V4cCgoYW5jaG9yZWQgPyBcIl5cIiA6IFwiXCIpICsgXCI8XFwvXFxzKlwiICsgdGFnTmFtZSArIFwiXFxzKj5cIiwgXCJpXCIpO1xuICB9XG5cbiAgZnVuY3Rpb24gYWRkVGFncyhmcm9tLCB0bykge1xuICAgIGZvciAodmFyIHRhZyBpbiBmcm9tKSB7XG4gICAgICB2YXIgZGVzdCA9IHRvW3RhZ10gfHwgKHRvW3RhZ10gPSBbXSk7XG4gICAgICB2YXIgc291cmNlID0gZnJvbVt0YWddO1xuICAgICAgZm9yICh2YXIgaSA9IHNvdXJjZS5sZW5ndGggLSAxOyBpID49IDA7IGktLSlcbiAgICAgICAgZGVzdC51bnNoaWZ0KHNvdXJjZVtpXSlcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBmaW5kTWF0Y2hpbmdNb2RlKHRhZ0luZm8sIHRhZ1RleHQpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRhZ0luZm8ubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzcGVjID0gdGFnSW5mb1tpXTtcbiAgICAgIGlmICghc3BlY1swXSB8fCBzcGVjWzFdLnRlc3QoZ2V0QXR0clZhbHVlKHRhZ1RleHQsIHNwZWNbMF0pKSkgcmV0dXJuIHNwZWNbMl07XG4gICAgfVxuICB9XG5cbiAgQ29kZU1pcnJvci5kZWZpbmVNb2RlKFwiaHRtbG1peGVkXCIsIGZ1bmN0aW9uIChjb25maWcsIHBhcnNlckNvbmZpZykge1xuICAgIHZhciBodG1sTW9kZSA9IENvZGVNaXJyb3IuZ2V0TW9kZShjb25maWcsIHtcbiAgICAgIG5hbWU6IFwieG1sXCIsXG4gICAgICBodG1sTW9kZTogdHJ1ZSxcbiAgICAgIG11bHRpbGluZVRhZ0luZGVudEZhY3RvcjogcGFyc2VyQ29uZmlnLm11bHRpbGluZVRhZ0luZGVudEZhY3RvcixcbiAgICAgIG11bHRpbGluZVRhZ0luZGVudFBhc3RUYWc6IHBhcnNlckNvbmZpZy5tdWx0aWxpbmVUYWdJbmRlbnRQYXN0VGFnXG4gICAgfSk7XG5cbiAgICB2YXIgdGFncyA9IHt9O1xuICAgIHZhciBjb25maWdUYWdzID0gcGFyc2VyQ29uZmlnICYmIHBhcnNlckNvbmZpZy50YWdzLCBjb25maWdTY3JpcHQgPSBwYXJzZXJDb25maWcgJiYgcGFyc2VyQ29uZmlnLnNjcmlwdFR5cGVzO1xuICAgIGFkZFRhZ3MoZGVmYXVsdFRhZ3MsIHRhZ3MpO1xuICAgIGlmIChjb25maWdUYWdzKSBhZGRUYWdzKGNvbmZpZ1RhZ3MsIHRhZ3MpO1xuICAgIGlmIChjb25maWdTY3JpcHQpIGZvciAodmFyIGkgPSBjb25maWdTY3JpcHQubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pXG4gICAgICB0YWdzLnNjcmlwdC51bnNoaWZ0KFtcInR5cGVcIiwgY29uZmlnU2NyaXB0W2ldLm1hdGNoZXMsIGNvbmZpZ1NjcmlwdFtpXS5tb2RlXSlcblxuICAgIGZ1bmN0aW9uIGh0bWwoc3RyZWFtLCBzdGF0ZSkge1xuICAgICAgdmFyIHN0eWxlID0gaHRtbE1vZGUudG9rZW4oc3RyZWFtLCBzdGF0ZS5odG1sU3RhdGUpLCB0YWcgPSAvXFxidGFnXFxiLy50ZXN0KHN0eWxlKSwgdGFnTmFtZVxuICAgICAgaWYgKHRhZyAmJiAhL1s8Plxcc1xcL10vLnRlc3Qoc3RyZWFtLmN1cnJlbnQoKSkgJiZcbiAgICAgICAgICAodGFnTmFtZSA9IHN0YXRlLmh0bWxTdGF0ZS50YWdOYW1lICYmIHN0YXRlLmh0bWxTdGF0ZS50YWdOYW1lLnRvTG93ZXJDYXNlKCkpICYmXG4gICAgICAgICAgdGFncy5oYXNPd25Qcm9wZXJ0eSh0YWdOYW1lKSkge1xuICAgICAgICBzdGF0ZS5pblRhZyA9IHRhZ05hbWUgKyBcIiBcIlxuICAgICAgfSBlbHNlIGlmIChzdGF0ZS5pblRhZyAmJiB0YWcgJiYgLz4kLy50ZXN0KHN0cmVhbS5jdXJyZW50KCkpKSB7XG4gICAgICAgIHZhciBpblRhZyA9IC9eKFtcXFNdKykgKC4qKS8uZXhlYyhzdGF0ZS5pblRhZylcbiAgICAgICAgc3RhdGUuaW5UYWcgPSBudWxsXG4gICAgICAgIHZhciBtb2RlU3BlYyA9IHN0cmVhbS5jdXJyZW50KCkgPT0gXCI+XCIgJiYgZmluZE1hdGNoaW5nTW9kZSh0YWdzW2luVGFnWzFdXSwgaW5UYWdbMl0pXG4gICAgICAgIHZhciBtb2RlID0gQ29kZU1pcnJvci5nZXRNb2RlKGNvbmZpZywgbW9kZVNwZWMpXG4gICAgICAgIHZhciBlbmRUYWdBID0gZ2V0VGFnUmVnZXhwKGluVGFnWzFdLCB0cnVlKSwgZW5kVGFnID0gZ2V0VGFnUmVnZXhwKGluVGFnWzFdLCBmYWxzZSk7XG4gICAgICAgIHN0YXRlLnRva2VuID0gZnVuY3Rpb24gKHN0cmVhbSwgc3RhdGUpIHtcbiAgICAgICAgICBpZiAoc3RyZWFtLm1hdGNoKGVuZFRhZ0EsIGZhbHNlKSkge1xuICAgICAgICAgICAgc3RhdGUudG9rZW4gPSBodG1sO1xuICAgICAgICAgICAgc3RhdGUubG9jYWxTdGF0ZSA9IHN0YXRlLmxvY2FsTW9kZSA9IG51bGw7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIG1heWJlQmFja3VwKHN0cmVhbSwgZW5kVGFnLCBzdGF0ZS5sb2NhbE1vZGUudG9rZW4oc3RyZWFtLCBzdGF0ZS5sb2NhbFN0YXRlKSk7XG4gICAgICAgIH07XG4gICAgICAgIHN0YXRlLmxvY2FsTW9kZSA9IG1vZGU7XG4gICAgICAgIHN0YXRlLmxvY2FsU3RhdGUgPSBDb2RlTWlycm9yLnN0YXJ0U3RhdGUobW9kZSwgaHRtbE1vZGUuaW5kZW50KHN0YXRlLmh0bWxTdGF0ZSwgXCJcIiwgXCJcIikpO1xuICAgICAgfSBlbHNlIGlmIChzdGF0ZS5pblRhZykge1xuICAgICAgICBzdGF0ZS5pblRhZyArPSBzdHJlYW0uY3VycmVudCgpXG4gICAgICAgIGlmIChzdHJlYW0uZW9sKCkpIHN0YXRlLmluVGFnICs9IFwiIFwiXG4gICAgICB9XG4gICAgICByZXR1cm4gc3R5bGU7XG4gICAgfTtcblxuICAgIHJldHVybiB7XG4gICAgICBzdGFydFN0YXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBzdGF0ZSA9IENvZGVNaXJyb3Iuc3RhcnRTdGF0ZShodG1sTW9kZSk7XG4gICAgICAgIHJldHVybiB7dG9rZW46IGh0bWwsIGluVGFnOiBudWxsLCBsb2NhbE1vZGU6IG51bGwsIGxvY2FsU3RhdGU6IG51bGwsIGh0bWxTdGF0ZTogc3RhdGV9O1xuICAgICAgfSxcblxuICAgICAgY29weVN0YXRlOiBmdW5jdGlvbiAoc3RhdGUpIHtcbiAgICAgICAgdmFyIGxvY2FsO1xuICAgICAgICBpZiAoc3RhdGUubG9jYWxTdGF0ZSkge1xuICAgICAgICAgIGxvY2FsID0gQ29kZU1pcnJvci5jb3B5U3RhdGUoc3RhdGUubG9jYWxNb2RlLCBzdGF0ZS5sb2NhbFN0YXRlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge3Rva2VuOiBzdGF0ZS50b2tlbiwgaW5UYWc6IHN0YXRlLmluVGFnLFxuICAgICAgICAgICAgICAgIGxvY2FsTW9kZTogc3RhdGUubG9jYWxNb2RlLCBsb2NhbFN0YXRlOiBsb2NhbCxcbiAgICAgICAgICAgICAgICBodG1sU3RhdGU6IENvZGVNaXJyb3IuY29weVN0YXRlKGh0bWxNb2RlLCBzdGF0ZS5odG1sU3RhdGUpfTtcbiAgICAgIH0sXG5cbiAgICAgIHRva2VuOiBmdW5jdGlvbiAoc3RyZWFtLCBzdGF0ZSkge1xuICAgICAgICByZXR1cm4gc3RhdGUudG9rZW4oc3RyZWFtLCBzdGF0ZSk7XG4gICAgICB9LFxuXG4gICAgICBpbmRlbnQ6IGZ1bmN0aW9uIChzdGF0ZSwgdGV4dEFmdGVyLCBsaW5lKSB7XG4gICAgICAgIGlmICghc3RhdGUubG9jYWxNb2RlIHx8IC9eXFxzKjxcXC8vLnRlc3QodGV4dEFmdGVyKSlcbiAgICAgICAgICByZXR1cm4gaHRtbE1vZGUuaW5kZW50KHN0YXRlLmh0bWxTdGF0ZSwgdGV4dEFmdGVyLCBsaW5lKTtcbiAgICAgICAgZWxzZSBpZiAoc3RhdGUubG9jYWxNb2RlLmluZGVudClcbiAgICAgICAgICByZXR1cm4gc3RhdGUubG9jYWxNb2RlLmluZGVudChzdGF0ZS5sb2NhbFN0YXRlLCB0ZXh0QWZ0ZXIsIGxpbmUpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgcmV0dXJuIENvZGVNaXJyb3IuUGFzcztcbiAgICAgIH0sXG5cbiAgICAgIGlubmVyTW9kZTogZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAgICAgIHJldHVybiB7c3RhdGU6IHN0YXRlLmxvY2FsU3RhdGUgfHwgc3RhdGUuaHRtbFN0YXRlLCBtb2RlOiBzdGF0ZS5sb2NhbE1vZGUgfHwgaHRtbE1vZGV9O1xuICAgICAgfVxuICAgIH07XG4gIH0sIFwieG1sXCIsIFwiamF2YXNjcmlwdFwiLCBcImNzc1wiKTtcblxuICBDb2RlTWlycm9yLmRlZmluZU1JTUUoXCJ0ZXh0L2h0bWxcIiwgXCJodG1sbWl4ZWRcIik7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=