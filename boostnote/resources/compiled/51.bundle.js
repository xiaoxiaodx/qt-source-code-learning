(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{"./node_modules/codemirror/mode/groovy/groovy.js":function(e,t,n){!function(e){"use strict";e.defineMode("groovy",(function(t){function n(e){for(var t={},n=e.split(" "),r=0;r<n.length;++r)t[n[r]]=!0;return t}var r,i=n("abstract as assert boolean break byte case catch char class const continue def default do double else enum extends final finally float for goto if implements import in instanceof int interface long native new package private protected public return short static strictfp super switch synchronized threadsafe throw throws trait transient try void volatile while"),o=n("catch class def do else enum finally for if interface switch trait try while"),a=n("return break continue"),s=n("null true false this");function l(e,t){var n=e.next();if('"'==n||"'"==n)return u(n,e,t);if(/[\[\]{}\(\),;\:\.]/.test(n))return r=n,null;if(/\d/.test(n))return e.eatWhile(/[\w\.]/),e.eat(/eE/)&&(e.eat(/\+\-/),e.eatWhile(/\d/)),"number";if("/"==n){if(e.eat("*"))return t.tokenize.push(f),f(e,t);if(e.eat("/"))return e.skipToEnd(),"comment";if(p(t.lastToken,!1))return u(n,e,t)}if("-"==n&&e.eat(">"))return r="->",null;if(/[+\-*&%=<>!?|\/~]/.test(n))return e.eatWhile(/[+\-*&%=<>|~]/),"operator";if(e.eatWhile(/[\w\$_]/),"@"==n)return e.eatWhile(/[\w\$_\.]/),"meta";if("."==t.lastToken)return"property";if(e.eat(":"))return r="proplabel","property";var l=e.current();return s.propertyIsEnumerable(l)?"atom":i.propertyIsEnumerable(l)?(o.propertyIsEnumerable(l)?r="newstatement":a.propertyIsEnumerable(l)&&(r="standalone"),"keyword"):"variable"}function u(e,t,n){var r=!1;if("/"!=e&&t.eat(e)){if(!t.eat(e))return"string";r=!0}function i(t,n){for(var i,o=!1,a=!r;null!=(i=t.next());){if(i==e&&!o){if(!r)break;if(t.match(e+e)){a=!0;break}}if('"'==e&&"$"==i&&!o&&t.eat("{"))return n.tokenize.push(c()),"string";o=!o&&"\\"==i}return a&&n.tokenize.pop(),"string"}return n.tokenize.push(i),i(t,n)}function c(){var e=1;function t(t,n){if("}"==t.peek()){if(0==--e)return n.tokenize.pop(),n.tokenize[n.tokenize.length-1](t,n)}else"{"==t.peek()&&e++;return l(t,n)}return t.isBase=!0,t}function f(e,t){for(var n,r=!1;n=e.next();){if("/"==n&&r){t.tokenize.pop();break}r="*"==n}return"comment"}function p(e,t){return!e||"operator"==e||"->"==e||/[\.\[\{\(,;:]/.test(e)||"newstatement"==e||"keyword"==e||"proplabel"==e||"standalone"==e&&!t}function d(e,t,n,r,i){this.indented=e,this.column=t,this.type=n,this.align=r,this.prev=i}function m(e,t,n){return e.context=new d(e.indented,t,n,null,e.context)}function k(e){var t=e.context.type;return")"!=t&&"]"!=t&&"}"!=t||(e.indented=e.context.indented),e.context=e.context.prev}return l.isBase=!0,{startState:function(e){return{tokenize:[l],context:new d((e||0)-t.indentUnit,0,"top",!1),indented:0,startOfLine:!0,lastToken:null}},token:function(e,t){var n=t.context;if(e.sol()&&(null==n.align&&(n.align=!1),t.indented=e.indentation(),t.startOfLine=!0,"statement"!=n.type||p(t.lastToken,!0)||(k(t),n=t.context)),e.eatSpace())return null;r=null;var i=t.tokenize[t.tokenize.length-1](e,t);if("comment"==i)return i;if(null==n.align&&(n.align=!0),";"!=r&&":"!=r||"statement"!=n.type)if("->"==r&&"statement"==n.type&&"}"==n.prev.type)k(t),t.context.align=!1;else if("{"==r)m(t,e.column(),"}");else if("["==r)m(t,e.column(),"]");else if("("==r)m(t,e.column(),")");else if("}"==r){for(;"statement"==n.type;)n=k(t);for("}"==n.type&&(n=k(t));"statement"==n.type;)n=k(t)}else r==n.type?k(t):("}"==n.type||"top"==n.type||"statement"==n.type&&"newstatement"==r)&&m(t,e.column(),"statement");else k(t);return t.startOfLine=!1,t.lastToken=r||i,i},indent:function(n,r){if(!n.tokenize[n.tokenize.length-1].isBase)return e.Pass;var i=r&&r.charAt(0),o=n.context;"statement"!=o.type||p(n.lastToken,!0)||(o=o.prev);var a=i==o.type;return"statement"==o.type?o.indented+("{"==i?0:t.indentUnit):o.align?o.column+(a?0:1):o.indented+(a?0:t.indentUnit)},electricChars:"{}",closeBrackets:{triples:"'\""},fold:"brace",blockCommentStart:"/*",blockCommentEnd:"*/",lineComment:"//"}})),e.defineMIME("text/x-groovy","groovy")}(n("./node_modules/codemirror/lib/codemirror.js"))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29kZW1pcnJvci9tb2RlL2dyb292eS9ncm9vdnkuanMiXSwibmFtZXMiOlsiQ29kZU1pcnJvciIsImRlZmluZU1vZGUiLCJjb25maWciLCJ3b3JkcyIsInN0ciIsIm9iaiIsInNwbGl0IiwiaSIsImxlbmd0aCIsImN1clB1bmMiLCJrZXl3b3JkcyIsImJsb2NrS2V5d29yZHMiLCJzdGFuZGFsb25lS2V5d29yZHMiLCJhdG9tcyIsInRva2VuQmFzZSIsInN0cmVhbSIsInN0YXRlIiwiY2giLCJuZXh0Iiwic3RhcnRTdHJpbmciLCJ0ZXN0IiwiZWF0V2hpbGUiLCJlYXQiLCJ0b2tlbml6ZSIsInB1c2giLCJ0b2tlbkNvbW1lbnQiLCJza2lwVG9FbmQiLCJleHBlY3RFeHByZXNzaW9uIiwibGFzdFRva2VuIiwiY3VyIiwiY3VycmVudCIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwicXVvdGUiLCJ0cmlwbGVRdW90ZWQiLCJ0IiwiZXNjYXBlZCIsImVuZCIsIm1hdGNoIiwidG9rZW5CYXNlVW50aWxCcmFjZSIsInBvcCIsImRlcHRoIiwicGVlayIsImlzQmFzZSIsIm1heWJlRW5kIiwibGFzdCIsIm5ld2xpbmUiLCJDb250ZXh0IiwiaW5kZW50ZWQiLCJjb2x1bW4iLCJ0eXBlIiwiYWxpZ24iLCJwcmV2IiwidGhpcyIsInB1c2hDb250ZXh0IiwiY29sIiwiY29udGV4dCIsInBvcENvbnRleHQiLCJzdGFydFN0YXRlIiwiYmFzZWNvbHVtbiIsImluZGVudFVuaXQiLCJzdGFydE9mTGluZSIsInRva2VuIiwiY3R4Iiwic29sIiwiaW5kZW50YXRpb24iLCJlYXRTcGFjZSIsInN0eWxlIiwiaW5kZW50IiwidGV4dEFmdGVyIiwiUGFzcyIsImZpcnN0Q2hhciIsImNoYXJBdCIsImNsb3NpbmciLCJlbGVjdHJpY0NoYXJzIiwiY2xvc2VCcmFja2V0cyIsInRyaXBsZXMiLCJmb2xkIiwiYmxvY2tDb21tZW50U3RhcnQiLCJi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cHlyaWdodCAoYykgYnkgTWFyaWpuIEhhdmVyYmVrZSBhbmQgb3RoZXJzXG4vLyBEaXN0cmlidXRlZCB1bmRlciBhbiBNSVQgbGljZW5zZTogaHR0cHM6Ly9jb2RlbWlycm9yLm5ldC9MSUNFTlNFXG5cbihmdW5jdGlvbihtb2QpIHtcbiAgaWYgKHR5cGVvZiBleHBvcnRzID09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG1vZHVsZSA9PSBcIm9iamVjdFwiKSAvLyBDb21tb25KU1xuICAgIG1vZChyZXF1aXJlKFwiLi4vLi4vbGliL2NvZGVtaXJyb3JcIikpO1xuICBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSAvLyBBTURcbiAgICBkZWZpbmUoW1wiLi4vLi4vbGliL2NvZGVtaXJyb3JcIl0sIG1vZCk7XG4gIGVsc2UgLy8gUGxhaW4gYnJvd3NlciBlbnZcbiAgICBtb2QoQ29kZU1pcnJvcik7XG59KShmdW5jdGlvbihDb2RlTWlycm9yKSB7XG5cInVzZSBzdHJpY3RcIjtcblxuQ29kZU1pcnJvci5kZWZpbmVNb2RlKFwiZ3Jvb3Z5XCIsIGZ1bmN0aW9uKGNvbmZpZykge1xuICBmdW5jdGlvbiB3b3JkcyhzdHIpIHtcbiAgICB2YXIgb2JqID0ge30sIHdvcmRzID0gc3RyLnNwbGl0KFwiIFwiKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHdvcmRzLmxlbmd0aDsgKytpKSBvYmpbd29yZHNbaV1dID0gdHJ1ZTtcbiAgICByZXR1cm4gb2JqO1xuICB9XG4gIHZhciBrZXl3b3JkcyA9IHdvcmRzKFxuICAgIFwiYWJzdHJhY3QgYXMgYXNzZXJ0IGJvb2xlYW4gYnJlYWsgYnl0ZSBjYXNlIGNhdGNoIGNoYXIgY2xhc3MgY29uc3QgY29udGludWUgZGVmIGRlZmF1bHQgXCIgK1xuICAgIFwiZG8gZG91YmxlIGVsc2UgZW51bSBleHRlbmRzIGZpbmFsIGZpbmFsbHkgZmxvYXQgZm9yIGdvdG8gaWYgaW1wbGVtZW50cyBpbXBvcnQgaW4gXCIgK1xuICAgIFwiaW5zdGFuY2VvZiBpbnQgaW50ZXJmYWNlIGxvbmcgbmF0aXZlIG5ldyBwYWNrYWdlIHByaXZhdGUgcHJvdGVjdGVkIHB1YmxpYyByZXR1cm4gXCIgK1xuICAgIFwic2hvcnQgc3RhdGljIHN0cmljdGZwIHN1cGVyIHN3aXRjaCBzeW5jaHJvbml6ZWQgdGhyZWFkc2FmZSB0aHJvdyB0aHJvd3MgdHJhaXQgdHJhbnNpZW50IFwiICtcbiAgICBcInRyeSB2b2lkIHZvbGF0aWxlIHdoaWxlXCIpO1xuICB2YXIgYmxvY2tLZXl3b3JkcyA9IHdvcmRzKFwiY2F0Y2ggY2xhc3MgZGVmIGRvIGVsc2UgZW51bSBmaW5hbGx5IGZvciBpZiBpbnRlcmZhY2Ugc3dpdGNoIHRyYWl0IHRyeSB3aGlsZVwiKTtcbiAgdmFyIHN0YW5kYWxvbmVLZXl3b3JkcyA9IHdvcmRzKFwicmV0dXJuIGJyZWFrIGNvbnRpbnVlXCIpO1xuICB2YXIgYXRvbXMgPSB3b3JkcyhcIm51bGwgdHJ1ZSBmYWxzZSB0aGlzXCIpO1xuXG4gIHZhciBjdXJQdW5jO1xuICBmdW5jdGlvbiB0b2tlbkJhc2Uoc3RyZWFtLCBzdGF0ZSkge1xuICAgIHZhciBjaCA9IHN0cmVhbS5uZXh0KCk7XG4gICAgaWYgKGNoID09ICdcIicgfHwgY2ggPT0gXCInXCIpIHtcbiAgICAgIHJldHVybiBzdGFydFN0cmluZyhjaCwgc3RyZWFtLCBzdGF0ZSk7XG4gICAgfVxuICAgIGlmICgvW1xcW1xcXXt9XFwoXFwpLDtcXDpcXC5dLy50ZXN0KGNoKSkge1xuICAgICAgY3VyUHVuYyA9IGNoO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGlmICgvXFxkLy50ZXN0KGNoKSkge1xuICAgICAgc3RyZWFtLmVhdFdoaWxlKC9bXFx3XFwuXS8pO1xuICAgICAgaWYgKHN0cmVhbS5lYXQoL2VFLykpIHsgc3RyZWFtLmVhdCgvXFwrXFwtLyk7IHN0cmVhbS5lYXRXaGlsZSgvXFxkLyk7IH1cbiAgICAgIHJldHVybiBcIm51bWJlclwiO1xuICAgIH1cbiAgICBpZiAoY2ggPT0gXCIvXCIpIHtcbiAgICAgIGlmIChzdHJlYW0uZWF0KFwiKlwiKSkge1xuICAgICAgICBzdGF0ZS50b2tlbml6ZS5wdXNoKHRva2VuQ29tbWVudCk7XG4gICAgICAgIHJldHVybiB0b2tlbkNvbW1lbnQoc3RyZWFtLCBzdGF0ZSk7XG4gICAgICB9XG4gICAgICBpZiAoc3RyZWFtLmVhdChcIi9cIikpIHtcbiAgICAgICAgc3RyZWFtLnNraXBUb0VuZCgpO1xuICAgICAgICByZXR1cm4gXCJjb21tZW50XCI7XG4gICAgICB9XG4gICAgICBpZiAoZXhwZWN0RXhwcmVzc2lvbihzdGF0ZS5sYXN0VG9rZW4sIGZhbHNlKSkge1xuICAgICAgICByZXR1cm4gc3RhcnRTdHJpbmcoY2gsIHN0cmVhbSwgc3RhdGUpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoY2ggPT0gXCItXCIgJiYgc3RyZWFtLmVhdChcIj5cIikpIHtcbiAgICAgIGN1clB1bmMgPSBcIi0+XCI7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgaWYgKC9bK1xcLSomJT08PiE/fFxcL35dLy50ZXN0KGNoKSkge1xuICAgICAgc3RyZWFtLmVhdFdoaWxlKC9bK1xcLSomJT08Pnx+XS8pO1xuICAgICAgcmV0dXJuIFwib3BlcmF0b3JcIjtcbiAgICB9XG4gICAgc3RyZWFtLmVhdFdoaWxlKC9bXFx3XFwkX10vKTtcbiAgICBpZiAoY2ggPT0gXCJAXCIpIHsgc3RyZWFtLmVhdFdoaWxlKC9bXFx3XFwkX1xcLl0vKTsgcmV0dXJuIFwibWV0YVwiOyB9XG4gICAgaWYgKHN0YXRlLmxhc3RUb2tlbiA9PSBcIi5cIikgcmV0dXJuIFwicHJvcGVydHlcIjtcbiAgICBpZiAoc3RyZWFtLmVhdChcIjpcIikpIHsgY3VyUHVuYyA9IFwicHJvcGxhYmVsXCI7IHJldHVybiBcInByb3BlcnR5XCI7IH1cbiAgICB2YXIgY3VyID0gc3RyZWFtLmN1cnJlbnQoKTtcbiAgICBpZiAoYXRvbXMucHJvcGVydHlJc0VudW1lcmFibGUoY3VyKSkgeyByZXR1cm4gXCJhdG9tXCI7IH1cbiAgICBpZiAoa2V5d29yZHMucHJvcGVydHlJc0VudW1lcmFibGUoY3VyKSkge1xuICAgICAgaWYgKGJsb2NrS2V5d29yZHMucHJvcGVydHlJc0VudW1lcmFibGUoY3VyKSkgY3VyUHVuYyA9IFwibmV3c3RhdGVtZW50XCI7XG4gICAgICBlbHNlIGlmIChzdGFuZGFsb25lS2V5d29yZHMucHJvcGVydHlJc0VudW1lcmFibGUoY3VyKSkgY3VyUHVuYyA9IFwic3RhbmRhbG9uZVwiO1xuICAgICAgcmV0dXJuIFwia2V5d29yZFwiO1xuICAgIH1cbiAgICByZXR1cm4gXCJ2YXJpYWJsZVwiO1xuICB9XG4gIHRva2VuQmFzZS5pc0Jhc2UgPSB0cnVlO1xuXG4gIGZ1bmN0aW9uIHN0YXJ0U3RyaW5nKHF1b3RlLCBzdHJlYW0sIHN0YXRlKSB7XG4gICAgdmFyIHRyaXBsZVF1b3RlZCA9IGZhbHNlO1xuICAgIGlmIChxdW90ZSAhPSBcIi9cIiAmJiBzdHJlYW0uZWF0KHF1b3RlKSkge1xuICAgICAgaWYgKHN0cmVhbS5lYXQocXVvdGUpKSB0cmlwbGVRdW90ZWQgPSB0cnVlO1xuICAgICAgZWxzZSByZXR1cm4gXCJzdHJpbmdcIjtcbiAgICB9XG4gICAgZnVuY3Rpb24gdChzdHJlYW0sIHN0YXRlKSB7XG4gICAgICB2YXIgZXNjYXBlZCA9IGZhbHNlLCBuZXh0LCBlbmQgPSAhdHJpcGxlUXVvdGVkO1xuICAgICAgd2hpbGUgKChuZXh0ID0gc3RyZWFtLm5leHQoKSkgIT0gbnVsbCkge1xuICAgICAgICBpZiAobmV4dCA9PSBxdW90ZSAmJiAhZXNjYXBlZCkge1xuICAgICAgICAgIGlmICghdHJpcGxlUXVvdGVkKSB7IGJyZWFrOyB9XG4gICAgICAgICAgaWYgKHN0cmVhbS5tYXRjaChxdW90ZSArIHF1b3RlKSkgeyBlbmQgPSB0cnVlOyBicmVhazsgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChxdW90ZSA9PSAnXCInICYmIG5leHQgPT0gXCIkXCIgJiYgIWVzY2FwZWQgJiYgc3RyZWFtLmVhdChcIntcIikpIHtcbiAgICAgICAgICBzdGF0ZS50b2tlbml6ZS5wdXNoKHRva2VuQmFzZVVudGlsQnJhY2UoKSk7XG4gICAgICAgICAgcmV0dXJuIFwic3RyaW5nXCI7XG4gICAgICAgIH1cbiAgICAgICAgZXNjYXBlZCA9ICFlc2NhcGVkICYmIG5leHQgPT0gXCJcXFxcXCI7XG4gICAgICB9XG4gICAgICBpZiAoZW5kKSBzdGF0ZS50b2tlbml6ZS5wb3AoKTtcbiAgICAgIHJldHVybiBcInN0cmluZ1wiO1xuICAgIH1cbiAgICBzdGF0ZS50b2tlbml6ZS5wdXNoKHQpO1xuICAgIHJldHVybiB0KHN0cmVhbSwgc3RhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gdG9rZW5CYXNlVW50aWxCcmFjZSgpIHtcbiAgICB2YXIgZGVwdGggPSAxO1xuICAgIGZ1bmN0aW9uIHQoc3RyZWFtLCBzdGF0ZSkge1xuICAgICAgaWYgKHN0cmVhbS5wZWVrKCkgPT0gXCJ9XCIpIHtcbiAgICAgICAgZGVwdGgtLTtcbiAgICAgICAgaWYgKGRlcHRoID09IDApIHtcbiAgICAgICAgICBzdGF0ZS50b2tlbml6ZS5wb3AoKTtcbiAgICAgICAgICByZXR1cm4gc3RhdGUudG9rZW5pemVbc3RhdGUudG9rZW5pemUubGVuZ3RoLTFdKHN0cmVhbSwgc3RhdGUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHN0cmVhbS5wZWVrKCkgPT0gXCJ7XCIpIHtcbiAgICAgICAgZGVwdGgrKztcbiAgICAgIH1cbiAgICAgIHJldHVybiB0b2tlbkJhc2Uoc3RyZWFtLCBzdGF0ZSk7XG4gICAgfVxuICAgIHQuaXNCYXNlID0gdHJ1ZTtcbiAgICByZXR1cm4gdDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRva2VuQ29tbWVudChzdHJlYW0sIHN0YXRlKSB7XG4gICAgdmFyIG1heWJlRW5kID0gZmFsc2UsIGNoO1xuICAgIHdoaWxlIChjaCA9IHN0cmVhbS5uZXh0KCkpIHtcbiAgICAgIGlmIChjaCA9PSBcIi9cIiAmJiBtYXliZUVuZCkge1xuICAgICAgICBzdGF0ZS50b2tlbml6ZS5wb3AoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBtYXliZUVuZCA9IChjaCA9PSBcIipcIik7XG4gICAgfVxuICAgIHJldHVybiBcImNvbW1lbnRcIjtcbiAgfVxuXG4gIGZ1bmN0aW9uIGV4cGVjdEV4cHJlc3Npb24obGFzdCwgbmV3bGluZSkge1xuICAgIHJldHVybiAhbGFzdCB8fCBsYXN0ID09IFwib3BlcmF0b3JcIiB8fCBsYXN0ID09IFwiLT5cIiB8fCAvW1xcLlxcW1xce1xcKCw7Ol0vLnRlc3QobGFzdCkgfHxcbiAgICAgIGxhc3QgPT0gXCJuZXdzdGF0ZW1lbnRcIiB8fCBsYXN0ID09IFwia2V5d29yZFwiIHx8IGxhc3QgPT0gXCJwcm9wbGFiZWxcIiB8fFxuICAgICAgKGxhc3QgPT0gXCJzdGFuZGFsb25lXCIgJiYgIW5ld2xpbmUpO1xuICB9XG5cbiAgZnVuY3Rpb24gQ29udGV4dChpbmRlbnRlZCwgY29sdW1uLCB0eXBlLCBhbGlnbiwgcHJldikge1xuICAgIHRoaXMuaW5kZW50ZWQgPSBpbmRlbnRlZDtcbiAgICB0aGlzLmNvbHVtbiA9IGNvbHVtbjtcbiAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgIHRoaXMuYWxpZ24gPSBhbGlnbjtcbiAgICB0aGlzLnByZXYgPSBwcmV2O1xuICB9XG4gIGZ1bmN0aW9uIHB1c2hDb250ZXh0KHN0YXRlLCBjb2wsIHR5cGUpIHtcbiAgICByZXR1cm4gc3RhdGUuY29udGV4dCA9IG5ldyBDb250ZXh0KHN0YXRlLmluZGVudGVkLCBjb2wsIHR5cGUsIG51bGwsIHN0YXRlLmNvbnRleHQpO1xuICB9XG4gIGZ1bmN0aW9uIHBvcENvbnRleHQoc3RhdGUpIHtcbiAgICB2YXIgdCA9IHN0YXRlLmNvbnRleHQudHlwZTtcbiAgICBpZiAodCA9PSBcIilcIiB8fCB0ID09IFwiXVwiIHx8IHQgPT0gXCJ9XCIpXG4gICAgICBzdGF0ZS5pbmRlbnRlZCA9IHN0YXRlLmNvbnRleHQuaW5kZW50ZWQ7XG4gICAgcmV0dXJuIHN0YXRlLmNvbnRleHQgPSBzdGF0ZS5jb250ZXh0LnByZXY7XG4gIH1cblxuICAvLyBJbnRlcmZhY2VcblxuICByZXR1cm4ge1xuICAgIHN0YXJ0U3RhdGU6IGZ1bmN0aW9uKGJhc2Vjb2x1bW4pIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHRva2VuaXplOiBbdG9rZW5CYXNlXSxcbiAgICAgICAgY29udGV4dDogbmV3IENvbnRleHQoKGJhc2Vjb2x1bW4gfHwgMCkgLSBjb25maWcuaW5kZW50VW5pdCwgMCwgXCJ0b3BcIiwgZmFsc2UpLFxuICAgICAgICBpbmRlbnRlZDogMCxcbiAgICAgICAgc3RhcnRPZkxpbmU6IHRydWUsXG4gICAgICAgIGxhc3RUb2tlbjogbnVsbFxuICAgICAgfTtcbiAgICB9LFxuXG4gICAgdG9rZW46IGZ1bmN0aW9uKHN0cmVhbSwgc3RhdGUpIHtcbiAgICAgIHZhciBjdHggPSBzdGF0ZS5jb250ZXh0O1xuICAgICAgaWYgKHN0cmVhbS5zb2woKSkge1xuICAgICAgICBpZiAoY3R4LmFsaWduID09IG51bGwpIGN0eC5hbGlnbiA9IGZhbHNlO1xuICAgICAgICBzdGF0ZS5pbmRlbnRlZCA9IHN0cmVhbS5pbmRlbnRhdGlvbigpO1xuICAgICAgICBzdGF0ZS5zdGFydE9mTGluZSA9IHRydWU7XG4gICAgICAgIC8vIEF1dG9tYXRpYyBzZW1pY29sb24gaW5zZXJ0aW9uXG4gICAgICAgIGlmIChjdHgudHlwZSA9PSBcInN0YXRlbWVudFwiICYmICFleHBlY3RFeHByZXNzaW9uKHN0YXRlLmxhc3RUb2tlbiwgdHJ1ZSkpIHtcbiAgICAgICAgICBwb3BDb250ZXh0KHN0YXRlKTsgY3R4ID0gc3RhdGUuY29udGV4dDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN0cmVhbS5lYXRTcGFjZSgpKSByZXR1cm4gbnVsbDtcbiAgICAgIGN1clB1bmMgPSBudWxsO1xuICAgICAgdmFyIHN0eWxlID0gc3RhdGUudG9rZW5pemVbc3RhdGUudG9rZW5pemUubGVuZ3RoLTFdKHN0cmVhbSwgc3RhdGUpO1xuICAgICAgaWYgKHN0eWxlID09IFwiY29tbWVudFwiKSByZXR1cm4gc3R5bGU7XG4gICAgICBpZiAoY3R4LmFsaWduID09IG51bGwpIGN0eC5hbGlnbiA9IHRydWU7XG5cbiAgICAgIGlmICgoY3VyUHVuYyA9PSBcIjtcIiB8fCBjdXJQdW5jID09IFwiOlwiKSAmJiBjdHgudHlwZSA9PSBcInN0YXRlbWVudFwiKSBwb3BDb250ZXh0KHN0YXRlKTtcbiAgICAgIC8vIEhhbmRsZSBpbmRlbnRhdGlvbiBmb3Ige3ggLT4gXFxuIC4uLiB9XG4gICAgICBlbHNlIGlmIChjdXJQdW5jID09IFwiLT5cIiAmJiBjdHgudHlwZSA9PSBcInN0YXRlbWVudFwiICYmIGN0eC5wcmV2LnR5cGUgPT0gXCJ9XCIpIHtcbiAgICAgICAgcG9wQ29udGV4dChzdGF0ZSk7XG4gICAgICAgIHN0YXRlLmNvbnRleHQuYWxpZ24gPSBmYWxzZTtcbiAgICAgIH1cbiAgICAgIGVsc2UgaWYgKGN1clB1bmMgPT0gXCJ7XCIpIHB1c2hDb250ZXh0KHN0YXRlLCBzdHJlYW0uY29sdW1uKCksIFwifVwiKTtcbiAgICAgIGVsc2UgaWYgKGN1clB1bmMgPT0gXCJbXCIpIHB1c2hDb250ZXh0KHN0YXRlLCBzdHJlYW0uY29sdW1uKCksIFwiXVwiKTtcbiAgICAgIGVsc2UgaWYgKGN1clB1bmMgPT0gXCIoXCIpIHB1c2hDb250ZXh0KHN0YXRlLCBzdHJlYW0uY29sdW1uKCksIFwiKVwiKTtcbiAgICAgIGVsc2UgaWYgKGN1clB1bmMgPT0gXCJ9XCIpIHtcbiAgICAgICAgd2hpbGUgKGN0eC50eXBlID09IFwic3RhdGVtZW50XCIpIGN0eCA9IHBvcENvbnRleHQoc3RhdGUpO1xuICAgICAgICBpZiAoY3R4LnR5cGUgPT0gXCJ9XCIpIGN0eCA9IHBvcENvbnRleHQoc3RhdGUpO1xuICAgICAgICB3aGlsZSAoY3R4LnR5cGUgPT0gXCJzdGF0ZW1lbnRcIikgY3R4ID0gcG9wQ29udGV4dChzdGF0ZSk7XG4gICAgICB9XG4gICAgICBlbHNlIGlmIChjdXJQdW5jID09IGN0eC50eXBlKSBwb3BDb250ZXh0KHN0YXRlKTtcbiAgICAgIGVsc2UgaWYgKGN0eC50eXBlID09IFwifVwiIHx8IGN0eC50eXBlID09IFwidG9wXCIgfHwgKGN0eC50eXBlID09IFwic3RhdGVtZW50XCIgJiYgY3VyUHVuYyA9PSBcIm5ld3N0YXRlbWVudFwiKSlcbiAgICAgICAgcHVzaENvbnRleHQoc3RhdGUsIHN0cmVhbS5jb2x1bW4oKSwgXCJzdGF0ZW1lbnRcIik7XG4gICAgICBzdGF0ZS5zdGFydE9mTGluZSA9IGZhbHNlO1xuICAgICAgc3RhdGUubGFzdFRva2VuID0gY3VyUHVuYyB8fCBzdHlsZTtcbiAgICAgIHJldHVybiBzdHlsZTtcbiAgICB9LFxuXG4gICAgaW5kZW50OiBmdW5jdGlvbihzdGF0ZSwgdGV4dEFmdGVyKSB7XG4gICAgICBpZiAoIXN0YXRlLnRva2VuaXplW3N0YXRlLnRva2VuaXplLmxlbmd0aC0xXS5pc0Jhc2UpIHJldHVybiBDb2RlTWlycm9yLlBhc3M7XG4gICAgICB2YXIgZmlyc3RDaGFyID0gdGV4dEFmdGVyICYmIHRleHRBZnRlci5jaGFyQXQoMCksIGN0eCA9IHN0YXRlLmNvbnRleHQ7XG4gICAgICBpZiAoY3R4LnR5cGUgPT0gXCJzdGF0ZW1lbnRcIiAmJiAhZXhwZWN0RXhwcmVzc2lvbihzdGF0ZS5sYXN0VG9rZW4sIHRydWUpKSBjdHggPSBjdHgucHJldjtcbiAgICAgIHZhciBjbG9zaW5nID0gZmlyc3RDaGFyID09IGN0eC50eXBlO1xuICAgICAgaWYgKGN0eC50eXBlID09IFwic3RhdGVtZW50XCIpIHJldHVybiBjdHguaW5kZW50ZWQgKyAoZmlyc3RDaGFyID09IFwie1wiID8gMCA6IGNvbmZpZy5pbmRlbnRVbml0KTtcbiAgICAgIGVsc2UgaWYgKGN0eC5hbGlnbikgcmV0dXJuIGN0eC5jb2x1bW4gKyAoY2xvc2luZyA/IDAgOiAxKTtcbiAgICAgIGVsc2UgcmV0dXJuIGN0eC5pbmRlbnRlZCArIChjbG9zaW5nID8gMCA6IGNvbmZpZy5pbmRlbnRVbml0KTtcbiAgICB9LFxuXG4gICAgZWxlY3RyaWNDaGFyczogXCJ7fVwiLFxuICAgIGNsb3NlQnJhY2tldHM6IHt0cmlwbGVzOiBcIidcXFwiXCJ9LFxuICAgIGZvbGQ6IFwiYnJhY2VcIixcbiAgICBibG9ja0NvbW1lbnRTdGFydDogXCIvKlwiLFxuICAgIGJsb2NrQ29tbWVudEVuZDogXCIqL1wiLFxuICAgIGxpbmVDb21tZW50OiBcIi8vXCJcbiAgfTtcbn0pO1xuXG5Db2RlTWlycm9yLmRlZmluZU1JTUUoXCJ0ZXh0L3gtZ3Jvb3Z5XCIsIFwiZ3Jvb3Z5XCIpO1xuXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=